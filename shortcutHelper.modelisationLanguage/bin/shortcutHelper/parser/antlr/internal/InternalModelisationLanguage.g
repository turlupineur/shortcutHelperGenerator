/*
 * generated by Xtext 2.15.0
 */
grammar InternalModelisationLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package shortcutHelper.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package shortcutHelper.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import shortcutHelper.services.ModelisationLanguageGrammarAccess;

}

@parser::members {

 	private ModelisationLanguageGrammarAccess grammarAccess;

    public InternalModelisationLanguageParser(TokenStream input, ModelisationLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Root";
   	}

   	@Override
   	protected ModelisationLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	iv_ruleRoot=ruleRoot
	{ $current=$iv_ruleRoot.current; }
	EOF;

// Rule Root
ruleRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getDatatypesTypeDataParserRuleCall_0_0());
				}
				lv_datatypes_0_0=ruleTypeData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"datatypes",
						lv_datatypes_0_0,
						"shortcutHelper.ModelisationLanguage.TypeData");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getServicesServiceParserRuleCall_1_0());
				}
				lv_services_1_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"services",
						lv_services_1_0,
						"shortcutHelper.ModelisationLanguage.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getUtilsUtilParserRuleCall_2_0());
				}
				lv_utils_2_0=ruleUtil
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"utils",
						lv_utils_2_0,
						"shortcutHelper.ModelisationLanguage.Util");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getHelpersHelperParserRuleCall_3_0());
				}
				lv_helpers_3_0=ruleHelper
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"helpers",
						lv_helpers_3_0,
						"shortcutHelper.ModelisationLanguage.Helper");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getLogicsLogicParserRuleCall_4_0());
				}
				lv_logics_4_0=ruleLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"logics",
						lv_logics_4_0,
						"shortcutHelper.ModelisationLanguage.Logic");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getBackendcommandsBackendcommandParserRuleCall_5_0());
				}
				lv_Backendcommands_5_0=ruleBackendcommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"Backendcommands",
						lv_Backendcommands_5_0,
						"shortcutHelper.ModelisationLanguage.Backendcommand");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getCommandsCommandParserRuleCall_6_0());
				}
				lv_commands_6_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"commands",
						lv_commands_6_0,
						"shortcutHelper.ModelisationLanguage.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getShortcutsShortcutParserRuleCall_7_0());
				}
				lv_shortcuts_7_0=ruleShortcut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"shortcuts",
						lv_shortcuts_7_0,
						"shortcutHelper.ModelisationLanguage.Shortcut");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleShortcut
entryRuleShortcut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortcutRule()); }
	iv_ruleShortcut=ruleShortcut
	{ $current=$iv_ruleShortcut.current; }
	EOF;

// Rule Shortcut
ruleShortcut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shortcut'
		{
			newLeafNode(otherlv_0, grammarAccess.getShortcutAccess().getShortcutKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getShortcutAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortcutRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getShortcutAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortcutRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getShortcutAccess().getCommandCommandCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getShortcutAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortcutAccess().getParamReferencesCommandParameterReferenceParserRuleCall_5_0());
				}
				lv_paramReferences_5_0=ruleCommandParameterReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortcutRule());
					}
					add(
						$current,
						"paramReferences",
						lv_paramReferences_5_0,
						"shortcutHelper.ModelisationLanguage.CommandParameterReference");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getShortcutAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCommandParameterReference
entryRuleCommandParameterReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandParameterReferenceRule()); }
	iv_ruleCommandParameterReference=ruleCommandParameterReference
	{ $current=$iv_ruleCommandParameterReference.current; }
	EOF;

// Rule CommandParameterReference
ruleCommandParameterReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommandParameterReferenceAccess().getSetKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandParameterReferenceRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCommandParameterReferenceAccess().getParamCommandParameterCrossReference_1_0());
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getCommandParameterReferenceAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandParameterReferenceAccess().getValueBasicTypeParserRuleCall_3_0());
				}
				lv_value_3_0=ruleBasicType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandParameterReferenceRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"shortcutHelper.ModelisationLanguage.BasicType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current.getText(); }
	EOF;

// Rule BasicType
ruleBasicType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getBasicTypeAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getBasicTypeAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Command'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getCommandKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='implementedby'
		{
			newLeafNode(otherlv_2, grammarAccess.getCommandAccess().getImplementedbyKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getCommandAccess().getBackendCommandBackendcommandCrossReference_3_0());
				}
			)
		)
		otherlv_4='withparam'
		{
			newLeafNode(otherlv_4, grammarAccess.getCommandAccess().getWithparamKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandAccess().getDescriptionDescriptionParserRuleCall_6_0());
				}
				lv_description_6_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"description",
						lv_description_6_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandAccess().getNoParameterNoParameterParserRuleCall_7_0());
				}
				lv_noParameter_7_0=ruleNoParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"noParameter",
						lv_noParameter_7_0,
						"shortcutHelper.ModelisationLanguage.NoParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandAccess().getParametersCommandParameterParserRuleCall_8_0());
				}
				lv_parameters_8_0=ruleCommandParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_8_0,
						"shortcutHelper.ModelisationLanguage.CommandParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleBackendcommand
entryRuleBackendcommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackendcommandRule()); }
	iv_ruleBackendcommand=ruleBackendcommand
	{ $current=$iv_ruleBackendcommand.current; }
	EOF;

// Rule Backendcommand
ruleBackendcommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='backendcommand'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackendcommandAccess().getBackendcommandKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBackendcommandAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackendcommandRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBackendcommandAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendcommandAccess().getDescriptionDescriptionParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendcommandRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendcommandAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0());
				}
				lv_usingSystemKomponent_4_0=ruleUsingSystemKomponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendcommandRule());
					}
					set(
						$current,
						"usingSystemKomponent",
						lv_usingSystemKomponent_4_0,
						"shortcutHelper.ModelisationLanguage.UsingSystemKomponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendcommandAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0());
				}
				lv_parameterDeclaration_5_0=ruleBackendParameterDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendcommandRule());
					}
					set(
						$current,
						"parameterDeclaration",
						lv_parameterDeclaration_5_0,
						"shortcutHelper.ModelisationLanguage.BackendParameterDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendcommandAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0());
				}
				lv_returningDeclaration_6_0=ruleReturningDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendcommandRule());
					}
					set(
						$current,
						"returningDeclaration",
						lv_returningDeclaration_6_0,
						"shortcutHelper.ModelisationLanguage.ReturningDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendcommandAccess().getImplementationImplementationParserRuleCall_7_0());
				}
				lv_implementation_7_0=ruleImplementation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendcommandRule());
					}
					set(
						$current,
						"implementation",
						lv_implementation_7_0,
						"shortcutHelper.ModelisationLanguage.Implementation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getBackendcommandAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLogic
entryRuleLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicRule()); }
	iv_ruleLogic=ruleLogic
	{ $current=$iv_ruleLogic.current; }
	EOF;

// Rule Logic
ruleLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='logic'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicAccess().getLogicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLogicAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getDescriptionDescriptionParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0());
				}
				lv_usingSystemKomponent_4_0=ruleUsingSystemKomponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"usingSystemKomponent",
						lv_usingSystemKomponent_4_0,
						"shortcutHelper.ModelisationLanguage.UsingSystemKomponent");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0());
				}
				lv_parameterDeclaration_5_0=ruleBackendParameterDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"parameterDeclaration",
						lv_parameterDeclaration_5_0,
						"shortcutHelper.ModelisationLanguage.BackendParameterDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0());
				}
				lv_returningDeclaration_6_0=ruleReturningDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"returningDeclaration",
						lv_returningDeclaration_6_0,
						"shortcutHelper.ModelisationLanguage.ReturningDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getImplementationImplementationParserRuleCall_7_0());
				}
				lv_implementation_7_0=ruleImplementation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"implementation",
						lv_implementation_7_0,
						"shortcutHelper.ModelisationLanguage.Implementation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLogicAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current.getText(); }
	EOF;

// Rule Description
ruleDescription returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_UNMODELISABLE_INFORMATION_0=RULE_UNMODELISABLE_INFORMATION
	{
		$current.merge(this_UNMODELISABLE_INFORMATION_0);
	}
	{
		newLeafNode(this_UNMODELISABLE_INFORMATION_0, grammarAccess.getDescriptionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall());
	}
;

// Entry rule entryRuleCommandParameter
entryRuleCommandParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandParameterRule()); }
	iv_ruleCommandParameter=ruleCommandParameter
	{ $current=$iv_ruleCommandParameter.current; }
	EOF;

// Rule CommandParameter
ruleCommandParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCommandParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandParameterRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCommandParameterAccess().getTypeTypeDataCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_2_0());
				}
				lv_parameterCategory_2_0=rulePARAMETER_CATEGORY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandParameterRule());
					}
					set(
						$current,
						"parameterCategory",
						lv_parameterCategory_2_0,
						"shortcutHelper.ModelisationLanguage.PARAMETER_CATEGORY");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandParameterAccess().getBackendParameterReferenceBackendParameterReferenceParserRuleCall_3_0());
				}
				lv_backendParameterReference_3_0=ruleBackendParameterReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandParameterRule());
					}
					set(
						$current,
						"backendParameterReference",
						lv_backendParameterReference_3_0,
						"shortcutHelper.ModelisationLanguage.BackendParameterReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBackendParameter
entryRuleBackendParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackendParameterRule()); }
	iv_ruleBackendParameter=ruleBackendParameter
	{ $current=$iv_ruleBackendParameter.current; }
	EOF;

// Rule BackendParameter
ruleBackendParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackendParameterAccess().getParameterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBackendParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackendParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackendParameterRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getBackendParameterAccess().getTypeTypeDataCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_3_0());
				}
				lv_parameterCategory_3_0=rulePARAMETER_CATEGORY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendParameterRule());
					}
					set(
						$current,
						"parameterCategory",
						lv_parameterCategory_3_0,
						"shortcutHelper.ModelisationLanguage.PARAMETER_CATEGORY");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBackendParameterReference
entryRuleBackendParameterReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackendParameterReferenceRule()); }
	iv_ruleBackendParameterReference=ruleBackendParameterReference
	{ $current=$iv_ruleBackendParameterReference.current; }
	EOF;

// Rule BackendParameterReference
ruleBackendParameterReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='as'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackendParameterReferenceAccess().getAsKeyword_0());
		}
		otherlv_1='inputparamter'
		{
			newLeafNode(otherlv_1, grammarAccess.getBackendParameterReferenceAccess().getInputparamterKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackendParameterReferenceRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterBackendParameterCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleNoParameter
entryRuleNoParameter returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNoParameterRule()); }
	iv_ruleNoParameter=ruleNoParameter
	{ $current=$iv_ruleNoParameter.current.getText(); }
	EOF;

// Rule NoParameter
ruleNoParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='NoParameter'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNoParameterAccess().getNoParameterKeyword());
	}
;

// Entry rule entryRuleBackendParameterDeclaration
entryRuleBackendParameterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackendParameterDeclarationRule()); }
	iv_ruleBackendParameterDeclaration=ruleBackendParameterDeclaration
	{ $current=$iv_ruleBackendParameterDeclaration.current; }
	EOF;

// Rule BackendParameterDeclaration
ruleBackendParameterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackendParameterDeclarationAccess().getInputKeyword_0());
		}
		otherlv_1='parameter'
		{
			newLeafNode(otherlv_1, grammarAccess.getBackendParameterDeclarationAccess().getParameterKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getBackendParameterDeclarationAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendParameterDeclarationAccess().getNoParameterNoParameterParserRuleCall_3_0());
				}
				lv_noParameter_3_0=ruleNoParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendParameterDeclarationRule());
					}
					set(
						$current,
						"noParameter",
						lv_noParameter_3_0,
						"shortcutHelper.ModelisationLanguage.NoParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBackendParameterDeclarationAccess().getParametersBackendParameterParserRuleCall_4_0());
				}
				lv_parameters_4_0=ruleBackendParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackendParameterDeclarationRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_4_0,
						"shortcutHelper.ModelisationLanguage.BackendParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleReturningDeclaration
entryRuleReturningDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturningDeclarationRule()); }
	iv_ruleReturningDeclaration=ruleReturningDeclaration
	{ $current=$iv_ruleReturningDeclaration.current; }
	EOF;

// Rule ReturningDeclaration
ruleReturningDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='returns'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturningDeclarationAccess().getReturnsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturningDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturningDeclarationAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0());
				}
				lv_returnType_2_0=ruleTypeDataReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturningDeclarationRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_2_0,
						"shortcutHelper.ModelisationLanguage.TypeDataReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUsingSystemKomponent
entryRuleUsingSystemKomponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsingSystemKomponentRule()); }
	iv_ruleUsingSystemKomponent=ruleUsingSystemKomponent
	{ $current=$iv_ruleUsingSystemKomponent.current; }
	EOF;

// Rule UsingSystemKomponent
ruleUsingSystemKomponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='using'
		{
			newLeafNode(otherlv_0, grammarAccess.getUsingSystemKomponentAccess().getUsingKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getUsingSystemKomponentAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUsingSystemKomponentAccess().getNothingUsingNothingParserRuleCall_2_0());
				}
				lv_nothing_2_0=ruleUsingNothing
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUsingSystemKomponentRule());
					}
					set(
						$current,
						"nothing",
						lv_nothing_2_0,
						"shortcutHelper.ModelisationLanguage.UsingNothing");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUsingSystemKomponentRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getUsingSystemKomponentAccess().getComponentsUsableSystemComponentCrossReference_3_0());
				}
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getUsingSystemKomponentAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleUsingNothing
entryRuleUsingNothing returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUsingNothingRule()); }
	iv_ruleUsingNothing=ruleUsingNothing
	{ $current=$iv_ruleUsingNothing.current.getText(); }
	EOF;

// Rule UsingNothing
ruleUsingNothing returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='nothing'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getUsingNothingAccess().getNothingKeyword());
	}
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getDescriptionDescriptionParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getMethodsMethodParserRuleCall_4_0());
				}
				lv_methods_4_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"methods",
						lv_methods_4_0,
						"shortcutHelper.ModelisationLanguage.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUtil
entryRuleUtil returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUtilRule()); }
	iv_ruleUtil=ruleUtil
	{ $current=$iv_ruleUtil.current; }
	EOF;

// Rule Util
ruleUtil returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='util'
		{
			newLeafNode(otherlv_0, grammarAccess.getUtilAccess().getUtilKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUtilAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUtilRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUtilAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUtilAccess().getDescriptionDescriptionParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUtilRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUtilAccess().getMethodsMethodParserRuleCall_4_0());
				}
				lv_methods_4_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUtilRule());
					}
					add(
						$current,
						"methods",
						lv_methods_4_0,
						"shortcutHelper.ModelisationLanguage.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getUtilAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleHelper
entryRuleHelper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelperRule()); }
	iv_ruleHelper=ruleHelper
	{ $current=$iv_ruleHelper.current; }
	EOF;

// Rule Helper
ruleHelper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='helper'
		{
			newLeafNode(otherlv_0, grammarAccess.getHelperAccess().getHelperKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getHelperAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHelperRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getHelperAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperAccess().getDescriptionDescriptionParserRuleCall_3_0());
				}
				lv_description_3_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperRule());
					}
					set(
						$current,
						"description",
						lv_description_3_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperAccess().getMethodsMethodParserRuleCall_4_0());
				}
				lv_methods_4_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperRule());
					}
					add(
						$current,
						"methods",
						lv_methods_4_0,
						"shortcutHelper.ModelisationLanguage.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getHelperAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='returns'
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getReturnsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0());
				}
				lv_returnType_2_0=ruleTypeDataReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_2_0,
						"shortcutHelper.ModelisationLanguage.TypeDataReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getDescriptionDescriptionParserRuleCall_4_0());
				}
				lv_description_4_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"description",
						lv_description_4_0,
						"shortcutHelper.ModelisationLanguage.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getNoArgumentNoArgumentParserRuleCall_5_0());
				}
				lv_noArgument_5_0=ruleNoArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"noArgument",
						lv_noArgument_5_0,
						"shortcutHelper.ModelisationLanguage.NoArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getArgumentsMethodArgumentParserRuleCall_6_0());
				}
				lv_arguments_6_0=ruleMethodArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_6_0,
						"shortcutHelper.ModelisationLanguage.MethodArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMethodArgument
entryRuleMethodArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodArgumentRule()); }
	iv_ruleMethodArgument=ruleMethodArgument
	{ $current=$iv_ruleMethodArgument.current; }
	EOF;

// Rule MethodArgument
ruleMethodArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='param'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodArgumentAccess().getParamKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodArgumentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodArgumentRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getMethodArgumentAccess().getTypeTypeDataCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleNoArgument
entryRuleNoArgument returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNoArgumentRule()); }
	iv_ruleNoArgument=ruleNoArgument
	{ $current=$iv_ruleNoArgument.current.getText(); }
	EOF;

// Rule NoArgument
ruleNoArgument returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='NoArgument'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNoArgumentAccess().getNoArgumentKeyword());
	}
;

// Entry rule entryRuleTypeDataReference
entryRuleTypeDataReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDataReferenceRule()); }
	iv_ruleTypeDataReference=ruleTypeDataReference
	{ $current=$iv_ruleTypeDataReference.current; }
	EOF;

// Rule TypeDataReference
ruleTypeDataReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataReferenceRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTypeDataReferenceAccess().getTypeTypeDataCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				lv_void_1_0='void'
				{
					newLeafNode(lv_void_1_0, grammarAccess.getTypeDataReferenceAccess().getVoidVoidKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataReferenceRule());
					}
					setWithLastConsumed($current, "void", lv_void_1_0, "void");
				}
			)
		)
		    |
		(
			(
				lv_valueInClipboard_2_0='ValueInClipboard'
				{
					newLeafNode(lv_valueInClipboard_2_0, grammarAccess.getTypeDataReferenceAccess().getValueInClipboardValueInClipboardKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataReferenceRule());
					}
					setWithLastConsumed($current, "valueInClipboard", lv_valueInClipboard_2_0, "ValueInClipboard");
				}
			)
		)
		    |
		(
			(
				lv_unmodelisableInformation_3_0=RULE_UNMODELISABLE_INFORMATION
				{
					newLeafNode(lv_unmodelisableInformation_3_0, grammarAccess.getTypeDataReferenceAccess().getUnmodelisableInformationUNMODELISABLE_INFORMATIONTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"unmodelisableInformation",
						lv_unmodelisableInformation_3_0,
						"shortcutHelper.ModelisationLanguage.UNMODELISABLE_INFORMATION");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeData
entryRuleTypeData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDataRule()); }
	iv_ruleTypeData=ruleTypeData
	{ $current=$iv_ruleTypeData.current; }
	EOF;

// Rule TypeData
ruleTypeData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDataAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDataAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_className_2_0=RULE_STRING
				{
					newLeafNode(lv_className_2_0, grammarAccess.getTypeDataAccess().getClassNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDataRule());
					}
					setWithLastConsumed(
						$current,
						"className",
						lv_className_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleAttribuableValue
entryRuleAttribuableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttribuableValueRule()); }
	iv_ruleAttribuableValue=ruleAttribuableValue
	{ $current=$iv_ruleAttribuableValue.current; }
	EOF;

// Rule AttribuableValue
ruleAttribuableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttribuableValueAccess().getBackendParameterParserRuleCall_0());
		}
		this_BackendParameter_0=ruleBackendParameter
		{
			$current = $this_BackendParameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttribuableValueAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttribuableValueAccess().getCallComponentMethodParserRuleCall_2());
		}
		this_CallComponentMethod_2=ruleCallComponentMethod
		{
			$current = $this_CallComponentMethod_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttribuableValueAccess().getCallLogicParserRuleCall_3());
		}
		this_CallLogic_3=ruleCallLogic
		{
			$current = $this_CallLogic_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImplementation
entryRuleImplementation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementationRule()); }
	iv_ruleImplementation=ruleImplementation
	{ $current=$iv_ruleImplementation.current; }
	EOF;

// Rule Implementation
ruleImplementation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='implementation'
		{
			newLeafNode(otherlv_0, grammarAccess.getImplementationAccess().getImplementationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_2_0());
				}
				lv_implementationLines_2_0=ruleImplementationLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationRule());
					}
					add(
						$current,
						"implementationLines",
						lv_implementationLines_2_0,
						"shortcutHelper.ModelisationLanguage.ImplementationLine");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleImplementationLine
entryRuleImplementationLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementationLineRule()); }
	iv_ruleImplementationLine=ruleImplementationLine
	{ $current=$iv_ruleImplementationLine.current; }
	EOF;

// Rule ImplementationLine
ruleImplementationLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getShowInfoParserRuleCall_0());
		}
		ruleShowInfo
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getShowWarningParserRuleCall_1());
		}
		ruleShowWarning
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getShowErrorParserRuleCall_2());
		}
		ruleShowError
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getCallComponentMethodParserRuleCall_3());
		}
		this_CallComponentMethod_3=ruleCallComponentMethod
		{
			$current = $this_CallComponentMethod_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getCallLogicParserRuleCall_4());
		}
		this_CallLogic_4=ruleCallLogic
		{
			$current = $this_CallLogic_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getVariableParserRuleCall_5());
		}
		this_Variable_5=ruleVariable
		{
			$current = $this_Variable_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getVariableValueAttributionParserRuleCall_6());
		}
		this_VariableValueAttribution_6=ruleVariableValueAttribution
		{
			$current = $this_VariableValueAttribution_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImplementationLineAccess().getConditionParserRuleCall_7());
		}
		this_Condition_7=ruleCondition
		{
			$current = $this_Condition_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getImplementationLineAccess().getImplementationLineAction_8_0(),
						$current);
				}
			)
			this_UNMODELISABLE_INFORMATION_9=RULE_UNMODELISABLE_INFORMATION
			{
				newLeafNode(this_UNMODELISABLE_INFORMATION_9, grammarAccess.getImplementationLineAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_8_1());
			}
		)
	)
;

// Entry rule entryRuleShowError
entryRuleShowError returns [String current=null]:
	{ newCompositeNode(grammarAccess.getShowErrorRule()); }
	iv_ruleShowError=ruleShowError
	{ $current=$iv_ruleShowError.current.getText(); }
	EOF;

// Rule ShowError
ruleShowError returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='showerror'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getShowErrorAccess().getShowerrorKeyword_0());
		}
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getShowErrorAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleShowWarning
entryRuleShowWarning returns [String current=null]:
	{ newCompositeNode(grammarAccess.getShowWarningRule()); }
	iv_ruleShowWarning=ruleShowWarning
	{ $current=$iv_ruleShowWarning.current.getText(); }
	EOF;

// Rule ShowWarning
ruleShowWarning returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='showwarning'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getShowWarningAccess().getShowwarningKeyword_0());
		}
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getShowWarningAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleShowInfo
entryRuleShowInfo returns [String current=null]:
	{ newCompositeNode(grammarAccess.getShowInfoRule()); }
	iv_ruleShowInfo=ruleShowInfo
	{ $current=$iv_ruleShowInfo.current.getText(); }
	EOF;

// Rule ShowInfo
ruleShowInfo returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='showinfo'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getShowInfoAccess().getShowinfoKeyword_0());
		}
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getShowInfoAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='variable'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVariableKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getTypeVariableTypeDataCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getInitialInitialisationVariableInitialInitialisationVariableParserRuleCall_3_0());
				}
				lv_initialInitialisationVariable_3_0=ruleInitialInitialisationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"initialInitialisationVariable",
						lv_initialInitialisationVariable_3_0,
						"shortcutHelper.ModelisationLanguage.InitialInitialisationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCallLogic
entryRuleCallLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallLogicRule()); }
	iv_ruleCallLogic=ruleCallLogic
	{ $current=$iv_ruleCallLogic.current; }
	EOF;

// Rule CallLogic
ruleCallLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='callLogic'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallLogicAccess().getCallLogicKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallLogicRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCallLogicAccess().getLogicLogicCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCallLogicAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallLogicAccess().getComponentBackendParameterAttributionsComponentBackendParameterValueAttributParserRuleCall_3_0());
				}
				lv_componentBackendParameterAttributions_3_0=ruleComponentBackendParameterValueAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallLogicRule());
					}
					add(
						$current,
						"componentBackendParameterAttributions",
						lv_componentBackendParameterAttributions_3_0,
						"shortcutHelper.ModelisationLanguage.ComponentBackendParameterValueAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getCallLogicAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleCallComponentMethod
entryRuleCallComponentMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallComponentMethodRule()); }
	iv_ruleCallComponentMethod=ruleCallComponentMethod
	{ $current=$iv_ruleCallComponentMethod.current; }
	EOF;

// Rule CallComponentMethod
ruleCallComponentMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='callComponentMethod'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallComponentMethodAccess().getCallComponentMethodKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallComponentMethodRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentUsableSystemComponentCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getCallComponentMethodAccess().getFullStopKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallComponentMethodRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCallComponentMethodAccess().getMethodMethodCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getCallComponentMethodAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallComponentMethodAccess().getArgumentAttributionsMethodArgumentValueAttributParserRuleCall_5_0());
				}
				lv_argumentAttributions_5_0=ruleMethodArgumentValueAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallComponentMethodRule());
					}
					add(
						$current,
						"argumentAttributions",
						lv_argumentAttributions_5_0,
						"shortcutHelper.ModelisationLanguage.MethodArgumentValueAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCallComponentMethodAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleMethodArgumentValueAttribut
entryRuleMethodArgumentValueAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodArgumentValueAttributRule()); }
	iv_ruleMethodArgumentValueAttribut=ruleMethodArgumentValueAttribut
	{ $current=$iv_ruleMethodArgumentValueAttribut.current; }
	EOF;

// Rule MethodArgumentValueAttribut
ruleMethodArgumentValueAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodArgumentValueAttributAccess().getSetKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodArgumentValueAttributRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMethodArgumentValueAttributAccess().getArgumentMethodArgumentCrossReference_1_0());
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodArgumentValueAttributAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodArgumentValueAttributAccess().getValueMethodArgumentAttribuableValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleMethodArgumentAttribuableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodArgumentValueAttributRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"shortcutHelper.ModelisationLanguage.MethodArgumentAttribuableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentBackendParameterValueAttribut
entryRuleComponentBackendParameterValueAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentBackendParameterValueAttributRule()); }
	iv_ruleComponentBackendParameterValueAttribut=ruleComponentBackendParameterValueAttribut
	{ $current=$iv_ruleComponentBackendParameterValueAttribut.current; }
	EOF;

// Rule ComponentBackendParameterValueAttribut
ruleComponentBackendParameterValueAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentBackendParameterValueAttributAccess().getSetKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentBackendParameterValueAttributRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterBackendParameterCrossReference_1_0());
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentBackendParameterValueAttributAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentBackendParameterValueAttributAccess().getValueComponentBackendParameterAttribuableValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleComponentBackendParameterAttribuableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentBackendParameterValueAttributRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"shortcutHelper.ModelisationLanguage.ComponentBackendParameterAttribuableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentBackendParameterAttribuableValue
entryRuleComponentBackendParameterAttribuableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentBackendParameterAttribuableValueRule()); }
	iv_ruleComponentBackendParameterAttribuableValue=ruleComponentBackendParameterAttribuableValue
	{ $current=$iv_ruleComponentBackendParameterAttribuableValue.current; }
	EOF;

// Rule ComponentBackendParameterAttribuableValue
ruleComponentBackendParameterAttribuableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getNullParserRuleCall_0());
		}
		ruleNull
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_UNMODELISABLE_INFORMATION_1=RULE_UNMODELISABLE_INFORMATION
		{
			newLeafNode(this_UNMODELISABLE_INFORMATION_1, grammarAccess.getComponentBackendParameterAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getBasicTypeParserRuleCall_2());
		}
		ruleBasicType
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentBackendParameterAttribuableValueRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueComponentBackendParameterAttribuableExpressionCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleMethodArgumentAttribuableValue
entryRuleMethodArgumentAttribuableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodArgumentAttribuableValueRule()); }
	iv_ruleMethodArgumentAttribuableValue=ruleMethodArgumentAttribuableValue
	{ $current=$iv_ruleMethodArgumentAttribuableValue.current; }
	EOF;

// Rule MethodArgumentAttribuableValue
ruleMethodArgumentAttribuableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMethodArgumentAttribuableValueAccess().getNullParserRuleCall_0());
		}
		ruleNull
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_UNMODELISABLE_INFORMATION_1=RULE_UNMODELISABLE_INFORMATION
		{
			newLeafNode(this_UNMODELISABLE_INFORMATION_1, grammarAccess.getMethodArgumentAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getMethodArgumentAttribuableValueAccess().getBasicTypeParserRuleCall_2());
		}
		ruleBasicType
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodArgumentAttribuableValueRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getMethodArgumentAttribuableValueAccess().getValueMethodArgumentAttribuableExpressionCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleInitialInitialisationVariable
entryRuleInitialInitialisationVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialInitialisationVariableRule()); }
	iv_ruleInitialInitialisationVariable=ruleInitialInitialisationVariable
	{ $current=$iv_ruleInitialInitialisationVariable.current; }
	EOF;

// Rule InitialInitialisationVariable
ruleInitialInitialisationVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=';'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialInitialisationVariableAccess().getSemicolonKeyword_0());
		}
		    |
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getInitialInitialisationVariableAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitialInitialisationVariableAccess().getValueVariableNewValueParserRuleCall_1_1_0());
					}
					lv_value_2_0=ruleVariableNewValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitialInitialisationVariableRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"shortcutHelper.ModelisationLanguage.VariableNewValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVariableValueAttribution
entryRuleVariableValueAttribution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValueAttributionRule()); }
	iv_ruleVariableValueAttribution=ruleVariableValueAttribution
	{ $current=$iv_ruleVariableValueAttribution.current; }
	EOF;

// Rule VariableValueAttribution
ruleVariableValueAttribution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableValueAttributionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getVariableValueAttributionAccess().getVariableVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableValueAttributionAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueAttributionAccess().getVariableNewValueValueExpressionParserRuleCall_2_0());
				}
				lv_variableNewValue_2_0=ruleValueExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueAttributionRule());
					}
					set(
						$current,
						"variableNewValue",
						lv_variableNewValue_2_0,
						"shortcutHelper.ModelisationLanguage.ValueExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableNewValue
entryRuleVariableNewValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableNewValueRule()); }
	iv_ruleVariableNewValue=ruleVariableNewValue
	{ $current=$iv_ruleVariableNewValue.current; }
	EOF;

// Rule VariableNewValue
ruleVariableNewValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableNewValueAccess().getNullParserRuleCall_0());
		}
		ruleNull
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_UNMODELISABLE_INFORMATION_1=RULE_UNMODELISABLE_INFORMATION
		{
			newLeafNode(this_UNMODELISABLE_INFORMATION_1, grammarAccess.getVariableNewValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1());
		}
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableNewValueRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getVariableNewValueAccess().getValueValueExpressionCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValueExpression
entryRuleValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueExpressionRule()); }
	iv_ruleValueExpression=ruleValueExpression
	{ $current=$iv_ruleValueExpression.current; }
	EOF;

// Rule ValueExpression
ruleValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getNullParserRuleCall_0());
		}
		ruleNull
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_UNMODELISABLE_INFORMATION_1=RULE_UNMODELISABLE_INFORMATION
		{
			newLeafNode(this_UNMODELISABLE_INFORMATION_1, grammarAccess.getValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1());
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueExpressionAccess().getValueAttribuableValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleAttribuableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"shortcutHelper.ModelisationLanguage.AttribuableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getPredicatPredicatParserRuleCall_1_0());
				}
				lv_predicat_1_0=rulePredicat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"predicat",
						lv_predicat_1_0,
						"shortcutHelper.ModelisationLanguage.Predicat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getComplementPredicatComplementPredicatParserRuleCall_2_0());
				}
				lv_complementPredicat_2_0=ruleComplementPredicat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"complementPredicat",
						lv_complementPredicat_2_0,
						"shortcutHelper.ModelisationLanguage.ComplementPredicat");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_4_0());
				}
				lv_conditionImplementation_4_0=ruleConditionImplementation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"conditionImplementation",
						lv_conditionImplementation_4_0,
						"shortcutHelper.ModelisationLanguage.ConditionImplementation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getElseConditionElseConditionParserRuleCall_6_0());
				}
				lv_elseCondition_6_0=ruleElseCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"elseCondition",
						lv_elseCondition_6_0,
						"shortcutHelper.ModelisationLanguage.ElseCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getConditionAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleConditionImplementation
entryRuleConditionImplementation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionImplementationRule()); }
	iv_ruleConditionImplementation=ruleConditionImplementation
	{ $current=$iv_ruleConditionImplementation.current; }
	EOF;

// Rule ConditionImplementation
ruleConditionImplementation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_0());
			}
			lv_implementationLines_0_0=ruleImplementationLine
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConditionImplementationRule());
				}
				add(
					$current,
					"implementationLines",
					lv_implementationLines_0_0,
					"shortcutHelper.ModelisationLanguage.ImplementationLine");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRulePredicat
entryRulePredicat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicatRule()); }
	iv_rulePredicat=rulePredicat
	{ $current=$iv_rulePredicat.current; }
	EOF;

// Rule Predicat
rulePredicat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicatRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getPredicatAccess().getVariableVariableCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getPredicatAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPredicatAccess().getComparisonValuePredicatValueExpressionParserRuleCall_2_0());
				}
				lv_comparisonValue_2_0=rulePredicatValueExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPredicatRule());
					}
					set(
						$current,
						"comparisonValue",
						lv_comparisonValue_2_0,
						"shortcutHelper.ModelisationLanguage.PredicatValueExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePredicatValueExpression
entryRulePredicatValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicatValueExpressionRule()); }
	iv_rulePredicatValueExpression=rulePredicatValueExpression
	{ $current=$iv_rulePredicatValueExpression.current; }
	EOF;

// Rule PredicatValueExpression
rulePredicatValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPredicatValueExpressionAccess().getNullParserRuleCall_0());
		}
		ruleNull
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_UNMODELISABLE_INFORMATION_1=RULE_UNMODELISABLE_INFORMATION
		{
			newLeafNode(this_UNMODELISABLE_INFORMATION_1, grammarAccess.getPredicatValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1());
		}
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicatValueExpressionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getPredicatValueExpressionAccess().getValuePredicatAttribuableValueCrossReference_2_0());
				}
			)
		)
		    |
		this_STRING_3=RULE_STRING
		{
			newLeafNode(this_STRING_3, grammarAccess.getPredicatValueExpressionAccess().getSTRINGTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleComplementPredicat
entryRuleComplementPredicat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplementPredicatRule()); }
	iv_ruleComplementPredicat=ruleComplementPredicat
	{ $current=$iv_ruleComplementPredicat.current; }
	EOF;

// Rule ComplementPredicat
ruleComplementPredicat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComplementPredicatAccess().getLogicalLinkLOGICAL_LINKParserRuleCall_0_0());
				}
				lv_logicalLink_0_0=ruleLOGICAL_LINK
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplementPredicatRule());
					}
					set(
						$current,
						"logicalLink",
						lv_logicalLink_0_0,
						"shortcutHelper.ModelisationLanguage.LOGICAL_LINK");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComplementPredicatAccess().getPredicatPredicatParserRuleCall_1_0());
				}
				lv_predicat_1_0=rulePredicat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplementPredicatRule());
					}
					set(
						$current,
						"predicat",
						lv_predicat_1_0,
						"shortcutHelper.ModelisationLanguage.Predicat");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElseCondition
entryRuleElseCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseConditionRule()); }
	iv_ruleElseCondition=ruleElseCondition
	{ $current=$iv_ruleElseCondition.current; }
	EOF;

// Rule ElseCondition
ruleElseCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseConditionAccess().getElseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_2_0());
				}
				lv_conditionImplementation_2_0=ruleConditionImplementation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseConditionRule());
					}
					set(
						$current,
						"conditionImplementation",
						lv_conditionImplementation_2_0,
						"shortcutHelper.ModelisationLanguage.ConditionImplementation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNull
entryRuleNull returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNullRule()); }
	iv_ruleNull=ruleNull
	{ $current=$iv_ruleNull.current.getText(); }
	EOF;

// Rule Null
ruleNull returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='null'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNullAccess().getNullKeyword());
	}
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleLOGICAL_LINK
entryRuleLOGICAL_LINK returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLOGICAL_LINKRule()); }
	iv_ruleLOGICAL_LINK=ruleLOGICAL_LINK
	{ $current=$iv_ruleLOGICAL_LINK.current; }
	EOF;

// Rule LOGICAL_LINK
ruleLOGICAL_LINK returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_OR_0_0='or'
				{
					newLeafNode(lv_OR_0_0, grammarAccess.getLOGICAL_LINKAccess().getOROrKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLOGICAL_LINKRule());
					}
					setWithLastConsumed($current, "OR", lv_OR_0_0, "or");
				}
			)
		)
		    |
		(
			(
				lv_AND_1_0='and'
				{
					newLeafNode(lv_AND_1_0, grammarAccess.getLOGICAL_LINKAccess().getANDAndKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLOGICAL_LINKRule());
					}
					setWithLastConsumed($current, "AND", lv_AND_1_0, "and");
				}
			)
		)
	)
;

// Rule PARAMETER_CATEGORY
rulePARAMETER_CATEGORY returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='required'
			{
				$current = grammarAccess.getPARAMETER_CATEGORYAccess().getREQUIREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPARAMETER_CATEGORYAccess().getREQUIREDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='optional'
			{
				$current = grammarAccess.getPARAMETER_CATEGORYAccess().getOPTIONALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPARAMETER_CATEGORYAccess().getOPTIONALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='default'
			{
				$current = grammarAccess.getPARAMETER_CATEGORYAccess().getDEFAULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPARAMETER_CATEGORYAccess().getDEFAULTEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_UNMODELISABLE_INFORMATION : '@' .+ '@';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

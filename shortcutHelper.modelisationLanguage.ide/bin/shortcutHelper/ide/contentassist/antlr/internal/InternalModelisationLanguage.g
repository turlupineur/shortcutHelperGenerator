/*
 * generated by Xtext 2.15.0
 */
grammar InternalModelisationLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package shortcutHelper.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package shortcutHelper.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import shortcutHelper.services.ModelisationLanguageGrammarAccess;

}
@parser::members {
	private ModelisationLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelisationLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRoot
entryRuleRoot
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootAccess().getGroup()); }
		(rule__Root__Group__0)
		{ after(grammarAccess.getRootAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortcut
entryRuleShortcut
:
{ before(grammarAccess.getShortcutRule()); }
	 ruleShortcut
{ after(grammarAccess.getShortcutRule()); } 
	 EOF 
;

// Rule Shortcut
ruleShortcut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortcutAccess().getGroup()); }
		(rule__Shortcut__Group__0)
		{ after(grammarAccess.getShortcutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandParameterReference
entryRuleCommandParameterReference
:
{ before(grammarAccess.getCommandParameterReferenceRule()); }
	 ruleCommandParameterReference
{ after(grammarAccess.getCommandParameterReferenceRule()); } 
	 EOF 
;

// Rule CommandParameterReference
ruleCommandParameterReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandParameterReferenceAccess().getGroup()); }
		(rule__CommandParameterReference__Group__0)
		{ after(grammarAccess.getCommandParameterReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getGroup()); }
		(rule__Command__Group__0)
		{ after(grammarAccess.getCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackendcommand
entryRuleBackendcommand
:
{ before(grammarAccess.getBackendcommandRule()); }
	 ruleBackendcommand
{ after(grammarAccess.getBackendcommandRule()); } 
	 EOF 
;

// Rule Backendcommand
ruleBackendcommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackendcommandAccess().getGroup()); }
		(rule__Backendcommand__Group__0)
		{ after(grammarAccess.getBackendcommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogic
entryRuleLogic
:
{ before(grammarAccess.getLogicRule()); }
	 ruleLogic
{ after(grammarAccess.getLogicRule()); } 
	 EOF 
;

// Rule Logic
ruleLogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAccess().getGroup()); }
		(rule__Logic__Group__0)
		{ after(grammarAccess.getLogicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getDescriptionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandParameter
entryRuleCommandParameter
:
{ before(grammarAccess.getCommandParameterRule()); }
	 ruleCommandParameter
{ after(grammarAccess.getCommandParameterRule()); } 
	 EOF 
;

// Rule CommandParameter
ruleCommandParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandParameterAccess().getGroup()); }
		(rule__CommandParameter__Group__0)
		{ after(grammarAccess.getCommandParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackendParameter
entryRuleBackendParameter
:
{ before(grammarAccess.getBackendParameterRule()); }
	 ruleBackendParameter
{ after(grammarAccess.getBackendParameterRule()); } 
	 EOF 
;

// Rule BackendParameter
ruleBackendParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackendParameterAccess().getGroup()); }
		(rule__BackendParameter__Group__0)
		{ after(grammarAccess.getBackendParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackendParameterReference
entryRuleBackendParameterReference
:
{ before(grammarAccess.getBackendParameterReferenceRule()); }
	 ruleBackendParameterReference
{ after(grammarAccess.getBackendParameterReferenceRule()); } 
	 EOF 
;

// Rule BackendParameterReference
ruleBackendParameterReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackendParameterReferenceAccess().getGroup()); }
		(rule__BackendParameterReference__Group__0)
		{ after(grammarAccess.getBackendParameterReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoParameter
entryRuleNoParameter
:
{ before(grammarAccess.getNoParameterRule()); }
	 ruleNoParameter
{ after(grammarAccess.getNoParameterRule()); } 
	 EOF 
;

// Rule NoParameter
ruleNoParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoParameterAccess().getNoParameterKeyword()); }
		'NoParameter'
		{ after(grammarAccess.getNoParameterAccess().getNoParameterKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackendParameterDeclaration
entryRuleBackendParameterDeclaration
:
{ before(grammarAccess.getBackendParameterDeclarationRule()); }
	 ruleBackendParameterDeclaration
{ after(grammarAccess.getBackendParameterDeclarationRule()); } 
	 EOF 
;

// Rule BackendParameterDeclaration
ruleBackendParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackendParameterDeclarationAccess().getGroup()); }
		(rule__BackendParameterDeclaration__Group__0)
		{ after(grammarAccess.getBackendParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturningDeclaration
entryRuleReturningDeclaration
:
{ before(grammarAccess.getReturningDeclarationRule()); }
	 ruleReturningDeclaration
{ after(grammarAccess.getReturningDeclarationRule()); } 
	 EOF 
;

// Rule ReturningDeclaration
ruleReturningDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturningDeclarationAccess().getGroup()); }
		(rule__ReturningDeclaration__Group__0)
		{ after(grammarAccess.getReturningDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsingSystemKomponent
entryRuleUsingSystemKomponent
:
{ before(grammarAccess.getUsingSystemKomponentRule()); }
	 ruleUsingSystemKomponent
{ after(grammarAccess.getUsingSystemKomponentRule()); } 
	 EOF 
;

// Rule UsingSystemKomponent
ruleUsingSystemKomponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsingSystemKomponentAccess().getGroup()); }
		(rule__UsingSystemKomponent__Group__0)
		{ after(grammarAccess.getUsingSystemKomponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsingNothing
entryRuleUsingNothing
:
{ before(grammarAccess.getUsingNothingRule()); }
	 ruleUsingNothing
{ after(grammarAccess.getUsingNothingRule()); } 
	 EOF 
;

// Rule UsingNothing
ruleUsingNothing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsingNothingAccess().getNothingKeyword()); }
		'nothing'
		{ after(grammarAccess.getUsingNothingAccess().getNothingKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleService
entryRuleService
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceAccess().getGroup()); }
		(rule__Service__Group__0)
		{ after(grammarAccess.getServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUtil
entryRuleUtil
:
{ before(grammarAccess.getUtilRule()); }
	 ruleUtil
{ after(grammarAccess.getUtilRule()); } 
	 EOF 
;

// Rule Util
ruleUtil 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUtilAccess().getGroup()); }
		(rule__Util__Group__0)
		{ after(grammarAccess.getUtilAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHelper
entryRuleHelper
:
{ before(grammarAccess.getHelperRule()); }
	 ruleHelper
{ after(grammarAccess.getHelperRule()); } 
	 EOF 
;

// Rule Helper
ruleHelper 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHelperAccess().getGroup()); }
		(rule__Helper__Group__0)
		{ after(grammarAccess.getHelperAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodArgument
entryRuleMethodArgument
:
{ before(grammarAccess.getMethodArgumentRule()); }
	 ruleMethodArgument
{ after(grammarAccess.getMethodArgumentRule()); } 
	 EOF 
;

// Rule MethodArgument
ruleMethodArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodArgumentAccess().getGroup()); }
		(rule__MethodArgument__Group__0)
		{ after(grammarAccess.getMethodArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoArgument
entryRuleNoArgument
:
{ before(grammarAccess.getNoArgumentRule()); }
	 ruleNoArgument
{ after(grammarAccess.getNoArgumentRule()); } 
	 EOF 
;

// Rule NoArgument
ruleNoArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoArgumentAccess().getNoArgumentKeyword()); }
		'NoArgument'
		{ after(grammarAccess.getNoArgumentAccess().getNoArgumentKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDataReference
entryRuleTypeDataReference
:
{ before(grammarAccess.getTypeDataReferenceRule()); }
	 ruleTypeDataReference
{ after(grammarAccess.getTypeDataReferenceRule()); } 
	 EOF 
;

// Rule TypeDataReference
ruleTypeDataReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getAlternatives()); }
		(rule__TypeDataReference__Alternatives)
		{ after(grammarAccess.getTypeDataReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeData
entryRuleTypeData
:
{ before(grammarAccess.getTypeDataRule()); }
	 ruleTypeData
{ after(grammarAccess.getTypeDataRule()); } 
	 EOF 
;

// Rule TypeData
ruleTypeData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDataAccess().getGroup()); }
		(rule__TypeData__Group__0)
		{ after(grammarAccess.getTypeDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribuableValue
entryRuleAttribuableValue
:
{ before(grammarAccess.getAttribuableValueRule()); }
	 ruleAttribuableValue
{ after(grammarAccess.getAttribuableValueRule()); } 
	 EOF 
;

// Rule AttribuableValue
ruleAttribuableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttribuableValueAccess().getAlternatives()); }
		(rule__AttribuableValue__Alternatives)
		{ after(grammarAccess.getAttribuableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplementation
entryRuleImplementation
:
{ before(grammarAccess.getImplementationRule()); }
	 ruleImplementation
{ after(grammarAccess.getImplementationRule()); } 
	 EOF 
;

// Rule Implementation
ruleImplementation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementationAccess().getGroup()); }
		(rule__Implementation__Group__0)
		{ after(grammarAccess.getImplementationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplementationLine
entryRuleImplementationLine
:
{ before(grammarAccess.getImplementationLineRule()); }
	 ruleImplementationLine
{ after(grammarAccess.getImplementationLineRule()); } 
	 EOF 
;

// Rule ImplementationLine
ruleImplementationLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementationLineAccess().getAlternatives()); }
		(rule__ImplementationLine__Alternatives)
		{ after(grammarAccess.getImplementationLineAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShowError
entryRuleShowError
:
{ before(grammarAccess.getShowErrorRule()); }
	 ruleShowError
{ after(grammarAccess.getShowErrorRule()); } 
	 EOF 
;

// Rule ShowError
ruleShowError 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowErrorAccess().getGroup()); }
		(rule__ShowError__Group__0)
		{ after(grammarAccess.getShowErrorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShowWarning
entryRuleShowWarning
:
{ before(grammarAccess.getShowWarningRule()); }
	 ruleShowWarning
{ after(grammarAccess.getShowWarningRule()); } 
	 EOF 
;

// Rule ShowWarning
ruleShowWarning 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowWarningAccess().getGroup()); }
		(rule__ShowWarning__Group__0)
		{ after(grammarAccess.getShowWarningAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShowInfo
entryRuleShowInfo
:
{ before(grammarAccess.getShowInfoRule()); }
	 ruleShowInfo
{ after(grammarAccess.getShowInfoRule()); } 
	 EOF 
;

// Rule ShowInfo
ruleShowInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowInfoAccess().getGroup()); }
		(rule__ShowInfo__Group__0)
		{ after(grammarAccess.getShowInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallLogic
entryRuleCallLogic
:
{ before(grammarAccess.getCallLogicRule()); }
	 ruleCallLogic
{ after(grammarAccess.getCallLogicRule()); } 
	 EOF 
;

// Rule CallLogic
ruleCallLogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallLogicAccess().getGroup()); }
		(rule__CallLogic__Group__0)
		{ after(grammarAccess.getCallLogicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallComponentMethod
entryRuleCallComponentMethod
:
{ before(grammarAccess.getCallComponentMethodRule()); }
	 ruleCallComponentMethod
{ after(grammarAccess.getCallComponentMethodRule()); } 
	 EOF 
;

// Rule CallComponentMethod
ruleCallComponentMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallComponentMethodAccess().getGroup()); }
		(rule__CallComponentMethod__Group__0)
		{ after(grammarAccess.getCallComponentMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodArgumentValueAttribut
entryRuleMethodArgumentValueAttribut
:
{ before(grammarAccess.getMethodArgumentValueAttributRule()); }
	 ruleMethodArgumentValueAttribut
{ after(grammarAccess.getMethodArgumentValueAttributRule()); } 
	 EOF 
;

// Rule MethodArgumentValueAttribut
ruleMethodArgumentValueAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodArgumentValueAttributAccess().getGroup()); }
		(rule__MethodArgumentValueAttribut__Group__0)
		{ after(grammarAccess.getMethodArgumentValueAttributAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentBackendParameterValueAttribut
entryRuleComponentBackendParameterValueAttribut
:
{ before(grammarAccess.getComponentBackendParameterValueAttributRule()); }
	 ruleComponentBackendParameterValueAttribut
{ after(grammarAccess.getComponentBackendParameterValueAttributRule()); } 
	 EOF 
;

// Rule ComponentBackendParameterValueAttribut
ruleComponentBackendParameterValueAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getGroup()); }
		(rule__ComponentBackendParameterValueAttribut__Group__0)
		{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentBackendParameterAttribuableValue
entryRuleComponentBackendParameterAttribuableValue
:
{ before(grammarAccess.getComponentBackendParameterAttribuableValueRule()); }
	 ruleComponentBackendParameterAttribuableValue
{ after(grammarAccess.getComponentBackendParameterAttribuableValueRule()); } 
	 EOF 
;

// Rule ComponentBackendParameterAttribuableValue
ruleComponentBackendParameterAttribuableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getAlternatives()); }
		(rule__ComponentBackendParameterAttribuableValue__Alternatives)
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodArgumentAttribuableValue
entryRuleMethodArgumentAttribuableValue
:
{ before(grammarAccess.getMethodArgumentAttribuableValueRule()); }
	 ruleMethodArgumentAttribuableValue
{ after(grammarAccess.getMethodArgumentAttribuableValueRule()); } 
	 EOF 
;

// Rule MethodArgumentAttribuableValue
ruleMethodArgumentAttribuableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getAlternatives()); }
		(rule__MethodArgumentAttribuableValue__Alternatives)
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialInitialisationVariable
entryRuleInitialInitialisationVariable
:
{ before(grammarAccess.getInitialInitialisationVariableRule()); }
	 ruleInitialInitialisationVariable
{ after(grammarAccess.getInitialInitialisationVariableRule()); } 
	 EOF 
;

// Rule InitialInitialisationVariable
ruleInitialInitialisationVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialInitialisationVariableAccess().getAlternatives()); }
		(rule__InitialInitialisationVariable__Alternatives)
		{ after(grammarAccess.getInitialInitialisationVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValueAttribution
entryRuleVariableValueAttribution
:
{ before(grammarAccess.getVariableValueAttributionRule()); }
	 ruleVariableValueAttribution
{ after(grammarAccess.getVariableValueAttributionRule()); } 
	 EOF 
;

// Rule VariableValueAttribution
ruleVariableValueAttribution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValueAttributionAccess().getGroup()); }
		(rule__VariableValueAttribution__Group__0)
		{ after(grammarAccess.getVariableValueAttributionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableNewValue
entryRuleVariableNewValue
:
{ before(grammarAccess.getVariableNewValueRule()); }
	 ruleVariableNewValue
{ after(grammarAccess.getVariableNewValueRule()); } 
	 EOF 
;

// Rule VariableNewValue
ruleVariableNewValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableNewValueAccess().getAlternatives()); }
		(rule__VariableNewValue__Alternatives)
		{ after(grammarAccess.getVariableNewValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueExpression
entryRuleValueExpression
:
{ before(grammarAccess.getValueExpressionRule()); }
	 ruleValueExpression
{ after(grammarAccess.getValueExpressionRule()); } 
	 EOF 
;

// Rule ValueExpression
ruleValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueExpressionAccess().getAlternatives()); }
		(rule__ValueExpression__Alternatives)
		{ after(grammarAccess.getValueExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionImplementation
entryRuleConditionImplementation
:
{ before(grammarAccess.getConditionImplementationRule()); }
	 ruleConditionImplementation
{ after(grammarAccess.getConditionImplementationRule()); } 
	 EOF 
;

// Rule ConditionImplementation
ruleConditionImplementation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionImplementationAccess().getImplementationLinesAssignment()); }
		(rule__ConditionImplementation__ImplementationLinesAssignment)*
		{ after(grammarAccess.getConditionImplementationAccess().getImplementationLinesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicat
entryRulePredicat
:
{ before(grammarAccess.getPredicatRule()); }
	 rulePredicat
{ after(grammarAccess.getPredicatRule()); } 
	 EOF 
;

// Rule Predicat
rulePredicat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicatAccess().getGroup()); }
		(rule__Predicat__Group__0)
		{ after(grammarAccess.getPredicatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicatValueExpression
entryRulePredicatValueExpression
:
{ before(grammarAccess.getPredicatValueExpressionRule()); }
	 rulePredicatValueExpression
{ after(grammarAccess.getPredicatValueExpressionRule()); } 
	 EOF 
;

// Rule PredicatValueExpression
rulePredicatValueExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getAlternatives()); }
		(rule__PredicatValueExpression__Alternatives)
		{ after(grammarAccess.getPredicatValueExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplementPredicat
entryRuleComplementPredicat
:
{ before(grammarAccess.getComplementPredicatRule()); }
	 ruleComplementPredicat
{ after(grammarAccess.getComplementPredicatRule()); } 
	 EOF 
;

// Rule ComplementPredicat
ruleComplementPredicat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplementPredicatAccess().getGroup()); }
		(rule__ComplementPredicat__Group__0)
		{ after(grammarAccess.getComplementPredicatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseCondition
entryRuleElseCondition
:
{ before(grammarAccess.getElseConditionRule()); }
	 ruleElseCondition
{ after(grammarAccess.getElseConditionRule()); } 
	 EOF 
;

// Rule ElseCondition
ruleElseCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseConditionAccess().getGroup()); }
		(rule__ElseCondition__Group__0)
		{ after(grammarAccess.getElseConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNull
entryRuleNull
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullAccess().getNullKeyword()); }
		'null'
		{ after(grammarAccess.getNullAccess().getNullKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLOGICAL_LINK
entryRuleLOGICAL_LINK
:
{ before(grammarAccess.getLOGICAL_LINKRule()); }
	 ruleLOGICAL_LINK
{ after(grammarAccess.getLOGICAL_LINKRule()); } 
	 EOF 
;

// Rule LOGICAL_LINK
ruleLOGICAL_LINK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLOGICAL_LINKAccess().getAlternatives()); }
		(rule__LOGICAL_LINK__Alternatives)
		{ after(grammarAccess.getLOGICAL_LINKAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PARAMETER_CATEGORY
rulePARAMETER_CATEGORY
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETER_CATEGORYAccess().getAlternatives()); }
		(rule__PARAMETER_CATEGORY__Alternatives)
		{ after(grammarAccess.getPARAMETER_CATEGORYAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getBasicTypeAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getBasicTypeAccess().getINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDataReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getTypeAssignment_0()); }
		(rule__TypeDataReference__TypeAssignment_0)
		{ after(grammarAccess.getTypeDataReferenceAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getVoidAssignment_1()); }
		(rule__TypeDataReference__VoidAssignment_1)
		{ after(grammarAccess.getTypeDataReferenceAccess().getVoidAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardAssignment_2()); }
		(rule__TypeDataReference__ValueInClipboardAssignment_2)
		{ after(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getUnmodelisableInformationAssignment_3()); }
		(rule__TypeDataReference__UnmodelisableInformationAssignment_3)
		{ after(grammarAccess.getTypeDataReferenceAccess().getUnmodelisableInformationAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttribuableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttribuableValueAccess().getBackendParameterParserRuleCall_0()); }
		ruleBackendParameter
		{ after(grammarAccess.getAttribuableValueAccess().getBackendParameterParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttribuableValueAccess().getVariableParserRuleCall_1()); }
		ruleVariable
		{ after(grammarAccess.getAttribuableValueAccess().getVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttribuableValueAccess().getCallComponentMethodParserRuleCall_2()); }
		ruleCallComponentMethod
		{ after(grammarAccess.getAttribuableValueAccess().getCallComponentMethodParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttribuableValueAccess().getCallLogicParserRuleCall_3()); }
		ruleCallLogic
		{ after(grammarAccess.getAttribuableValueAccess().getCallLogicParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationLine__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationLineAccess().getShowInfoParserRuleCall_0()); }
		ruleShowInfo
		{ after(grammarAccess.getImplementationLineAccess().getShowInfoParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getShowWarningParserRuleCall_1()); }
		ruleShowWarning
		{ after(grammarAccess.getImplementationLineAccess().getShowWarningParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getShowErrorParserRuleCall_2()); }
		ruleShowError
		{ after(grammarAccess.getImplementationLineAccess().getShowErrorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getCallComponentMethodParserRuleCall_3()); }
		ruleCallComponentMethod
		{ after(grammarAccess.getImplementationLineAccess().getCallComponentMethodParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getCallLogicParserRuleCall_4()); }
		ruleCallLogic
		{ after(grammarAccess.getImplementationLineAccess().getCallLogicParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getVariableParserRuleCall_5()); }
		ruleVariable
		{ after(grammarAccess.getImplementationLineAccess().getVariableParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getVariableValueAttributionParserRuleCall_6()); }
		ruleVariableValueAttribution
		{ after(grammarAccess.getImplementationLineAccess().getVariableValueAttributionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getConditionParserRuleCall_7()); }
		ruleCondition
		{ after(grammarAccess.getImplementationLineAccess().getConditionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationLineAccess().getGroup_8()); }
		(rule__ImplementationLine__Group_8__0)
		{ after(grammarAccess.getImplementationLineAccess().getGroup_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterAttribuableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getNullParserRuleCall_0()); }
		ruleNull
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getNullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getBasicTypeParserRuleCall_2()); }
		ruleBasicType
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getBasicTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueAssignment_3()); }
		(rule__ComponentBackendParameterAttribuableValue__ValueAssignment_3)
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentAttribuableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getNullParserRuleCall_0()); }
		ruleNull
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getNullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getBasicTypeParserRuleCall_2()); }
		ruleBasicType
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getBasicTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueAssignment_3()); }
		(rule__MethodArgumentAttribuableValue__ValueAssignment_3)
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialInitialisationVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialInitialisationVariableAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getInitialInitialisationVariableAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitialInitialisationVariableAccess().getGroup_1()); }
		(rule__InitialInitialisationVariable__Group_1__0)
		{ after(grammarAccess.getInitialInitialisationVariableAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNewValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNewValueAccess().getNullParserRuleCall_0()); }
		ruleNull
		{ after(grammarAccess.getVariableNewValueAccess().getNullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableNewValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getVariableNewValueAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableNewValueAccess().getValueAssignment_2()); }
		(rule__VariableNewValue__ValueAssignment_2)
		{ after(grammarAccess.getVariableNewValueAccess().getValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueExpressionAccess().getNullParserRuleCall_0()); }
		ruleNull
		{ after(grammarAccess.getValueExpressionAccess().getNullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueExpressionAccess().getValueAssignment_2()); }
		(rule__ValueExpression__ValueAssignment_2)
		{ after(grammarAccess.getValueExpressionAccess().getValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatValueExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getNullParserRuleCall_0()); }
		ruleNull
		{ after(grammarAccess.getPredicatValueExpressionAccess().getNullParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getPredicatValueExpressionAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getValueAssignment_2()); }
		(rule__PredicatValueExpression__ValueAssignment_2)
		{ after(grammarAccess.getPredicatValueExpressionAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getSTRINGTerminalRuleCall_3()); }
		RULE_STRING
		{ after(grammarAccess.getPredicatValueExpressionAccess().getSTRINGTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_LINK__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOGICAL_LINKAccess().getORAssignment_0()); }
		(rule__LOGICAL_LINK__ORAssignment_0)
		{ after(grammarAccess.getLOGICAL_LINKAccess().getORAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLOGICAL_LINKAccess().getANDAssignment_1()); }
		(rule__LOGICAL_LINK__ANDAssignment_1)
		{ after(grammarAccess.getLOGICAL_LINKAccess().getANDAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PARAMETER_CATEGORY__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPARAMETER_CATEGORYAccess().getREQUIREDEnumLiteralDeclaration_0()); }
		('required')
		{ after(grammarAccess.getPARAMETER_CATEGORYAccess().getREQUIREDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPARAMETER_CATEGORYAccess().getOPTIONALEnumLiteralDeclaration_1()); }
		('optional')
		{ after(grammarAccess.getPARAMETER_CATEGORYAccess().getOPTIONALEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPARAMETER_CATEGORYAccess().getDEFAULTEnumLiteralDeclaration_2()); }
		('default')
		{ after(grammarAccess.getPARAMETER_CATEGORYAccess().getDEFAULTEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getDatatypesAssignment_0()); }
	(rule__Root__DatatypesAssignment_0)*
	{ after(grammarAccess.getRootAccess().getDatatypesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__1__Impl
	rule__Root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getServicesAssignment_1()); }
	(rule__Root__ServicesAssignment_1)*
	{ after(grammarAccess.getRootAccess().getServicesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__2__Impl
	rule__Root__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getUtilsAssignment_2()); }
	(rule__Root__UtilsAssignment_2)*
	{ after(grammarAccess.getRootAccess().getUtilsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__3__Impl
	rule__Root__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getHelpersAssignment_3()); }
	(rule__Root__HelpersAssignment_3)*
	{ after(grammarAccess.getRootAccess().getHelpersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__4__Impl
	rule__Root__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getLogicsAssignment_4()); }
	(rule__Root__LogicsAssignment_4)*
	{ after(grammarAccess.getRootAccess().getLogicsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__5__Impl
	rule__Root__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getBackendcommandsAssignment_5()); }
	(rule__Root__BackendcommandsAssignment_5)*
	{ after(grammarAccess.getRootAccess().getBackendcommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__6__Impl
	rule__Root__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getCommandsAssignment_6()); }
	(rule__Root__CommandsAssignment_6)*
	{ after(grammarAccess.getRootAccess().getCommandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getShortcutsAssignment_7()); }
	(rule__Root__ShortcutsAssignment_7)*
	{ after(grammarAccess.getRootAccess().getShortcutsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shortcut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__0__Impl
	rule__Shortcut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getShortcutKeyword_0()); }
	'shortcut'
	{ after(grammarAccess.getShortcutAccess().getShortcutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__1__Impl
	rule__Shortcut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getNameAssignment_1()); }
	(rule__Shortcut__NameAssignment_1)
	{ after(grammarAccess.getShortcutAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__2__Impl
	rule__Shortcut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getShortcutAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__3__Impl
	rule__Shortcut__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getCommandAssignment_3()); }
	(rule__Shortcut__CommandAssignment_3)
	{ after(grammarAccess.getShortcutAccess().getCommandAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__4__Impl
	rule__Shortcut__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getShortcutAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__5__Impl
	rule__Shortcut__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getParamReferencesAssignment_5()); }
	(rule__Shortcut__ParamReferencesAssignment_5)*
	{ after(grammarAccess.getShortcutAccess().getParamReferencesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortcut__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortcutAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getShortcutAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandParameterReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameterReference__Group__0__Impl
	rule__CommandParameterReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterReferenceAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getCommandParameterReferenceAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameterReference__Group__1__Impl
	rule__CommandParameterReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterReferenceAccess().getParamAssignment_1()); }
	(rule__CommandParameterReference__ParamAssignment_1)
	{ after(grammarAccess.getCommandParameterReferenceAccess().getParamAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameterReference__Group__2__Impl
	rule__CommandParameterReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterReferenceAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getCommandParameterReferenceAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameterReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterReferenceAccess().getValueAssignment_3()); }
	(rule__CommandParameterReference__ValueAssignment_3)
	{ after(grammarAccess.getCommandParameterReferenceAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__0__Impl
	rule__Command__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandKeyword_0()); }
	'Command'
	{ after(grammarAccess.getCommandAccess().getCommandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__1__Impl
	rule__Command__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getNameAssignment_1()); }
	(rule__Command__NameAssignment_1)
	{ after(grammarAccess.getCommandAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__2__Impl
	rule__Command__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getImplementedbyKeyword_2()); }
	'implementedby'
	{ after(grammarAccess.getCommandAccess().getImplementedbyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__3__Impl
	rule__Command__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getBackendCommandAssignment_3()); }
	(rule__Command__BackendCommandAssignment_3)
	{ after(grammarAccess.getCommandAccess().getBackendCommandAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__4__Impl
	rule__Command__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getWithparamKeyword_4()); }
	'withparam'
	{ after(grammarAccess.getCommandAccess().getWithparamKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__5__Impl
	rule__Command__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__6__Impl
	rule__Command__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getDescriptionAssignment_6()); }
	(rule__Command__DescriptionAssignment_6)?
	{ after(grammarAccess.getCommandAccess().getDescriptionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__7__Impl
	rule__Command__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getNoParameterAssignment_7()); }
	(rule__Command__NoParameterAssignment_7)?
	{ after(grammarAccess.getCommandAccess().getNoParameterAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__8__Impl
	rule__Command__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getParametersAssignment_8()); }
	(rule__Command__ParametersAssignment_8)*
	{ after(grammarAccess.getCommandAccess().getParametersAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Backendcommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__0__Impl
	rule__Backendcommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getBackendcommandKeyword_0()); }
	'backendcommand'
	{ after(grammarAccess.getBackendcommandAccess().getBackendcommandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__1__Impl
	rule__Backendcommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getNameAssignment_1()); }
	(rule__Backendcommand__NameAssignment_1)
	{ after(grammarAccess.getBackendcommandAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__2__Impl
	rule__Backendcommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBackendcommandAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__3__Impl
	rule__Backendcommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getDescriptionAssignment_3()); }
	(rule__Backendcommand__DescriptionAssignment_3)?
	{ after(grammarAccess.getBackendcommandAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__4__Impl
	rule__Backendcommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getUsingSystemKomponentAssignment_4()); }
	(rule__Backendcommand__UsingSystemKomponentAssignment_4)
	{ after(grammarAccess.getBackendcommandAccess().getUsingSystemKomponentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__5__Impl
	rule__Backendcommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getParameterDeclarationAssignment_5()); }
	(rule__Backendcommand__ParameterDeclarationAssignment_5)
	{ after(grammarAccess.getBackendcommandAccess().getParameterDeclarationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__6__Impl
	rule__Backendcommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getReturningDeclarationAssignment_6()); }
	(rule__Backendcommand__ReturningDeclarationAssignment_6)
	{ after(grammarAccess.getBackendcommandAccess().getReturningDeclarationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__7__Impl
	rule__Backendcommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getImplementationAssignment_7()); }
	(rule__Backendcommand__ImplementationAssignment_7)
	{ after(grammarAccess.getBackendcommandAccess().getImplementationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backendcommand__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendcommandAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getBackendcommandAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__0__Impl
	rule__Logic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
	'logic'
	{ after(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__1__Impl
	rule__Logic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getNameAssignment_1()); }
	(rule__Logic__NameAssignment_1)
	{ after(grammarAccess.getLogicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__2__Impl
	rule__Logic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLogicAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__3__Impl
	rule__Logic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getDescriptionAssignment_3()); }
	(rule__Logic__DescriptionAssignment_3)?
	{ after(grammarAccess.getLogicAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__4__Impl
	rule__Logic__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getUsingSystemKomponentAssignment_4()); }
	(rule__Logic__UsingSystemKomponentAssignment_4)?
	{ after(grammarAccess.getLogicAccess().getUsingSystemKomponentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__5__Impl
	rule__Logic__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getParameterDeclarationAssignment_5()); }
	(rule__Logic__ParameterDeclarationAssignment_5)
	{ after(grammarAccess.getLogicAccess().getParameterDeclarationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__6__Impl
	rule__Logic__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getReturningDeclarationAssignment_6()); }
	(rule__Logic__ReturningDeclarationAssignment_6)
	{ after(grammarAccess.getLogicAccess().getReturningDeclarationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__7__Impl
	rule__Logic__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getImplementationAssignment_7()); }
	(rule__Logic__ImplementationAssignment_7)
	{ after(grammarAccess.getLogicAccess().getImplementationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getLogicAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameter__Group__0__Impl
	rule__CommandParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterAccess().getNameAssignment_0()); }
	(rule__CommandParameter__NameAssignment_0)
	{ after(grammarAccess.getCommandParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameter__Group__1__Impl
	rule__CommandParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterAccess().getTypeAssignment_1()); }
	(rule__CommandParameter__TypeAssignment_1)
	{ after(grammarAccess.getCommandParameterAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameter__Group__2__Impl
	rule__CommandParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterAccess().getParameterCategoryAssignment_2()); }
	(rule__CommandParameter__ParameterCategoryAssignment_2)
	{ after(grammarAccess.getCommandParameterAccess().getParameterCategoryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandParameterAccess().getBackendParameterReferenceAssignment_3()); }
	(rule__CommandParameter__BackendParameterReferenceAssignment_3)
	{ after(grammarAccess.getCommandParameterAccess().getBackendParameterReferenceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BackendParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameter__Group__0__Impl
	rule__BackendParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterAccess().getParameterKeyword_0()); }
	'parameter'
	{ after(grammarAccess.getBackendParameterAccess().getParameterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameter__Group__1__Impl
	rule__BackendParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterAccess().getNameAssignment_1()); }
	(rule__BackendParameter__NameAssignment_1)
	{ after(grammarAccess.getBackendParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameter__Group__2__Impl
	rule__BackendParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterAccess().getTypeAssignment_2()); }
	(rule__BackendParameter__TypeAssignment_2)
	{ after(grammarAccess.getBackendParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterAccess().getParameterCategoryAssignment_3()); }
	(rule__BackendParameter__ParameterCategoryAssignment_3)
	{ after(grammarAccess.getBackendParameterAccess().getParameterCategoryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BackendParameterReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterReference__Group__0__Impl
	rule__BackendParameterReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterReferenceAccess().getAsKeyword_0()); }
	'as'
	{ after(grammarAccess.getBackendParameterReferenceAccess().getAsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterReference__Group__1__Impl
	rule__BackendParameterReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterReferenceAccess().getInputparamterKeyword_1()); }
	'inputparamter'
	{ after(grammarAccess.getBackendParameterReferenceAccess().getInputparamterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterAssignment_2()); }
	(rule__BackendParameterReference__BackendCommandParameterAssignment_2)
	{ after(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BackendParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterDeclaration__Group__0__Impl
	rule__BackendParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterDeclarationAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getBackendParameterDeclarationAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterDeclaration__Group__1__Impl
	rule__BackendParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterDeclarationAccess().getParameterKeyword_1()); }
	'parameter'
	{ after(grammarAccess.getBackendParameterDeclarationAccess().getParameterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterDeclaration__Group__2__Impl
	rule__BackendParameterDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterDeclarationAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getBackendParameterDeclarationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterDeclaration__Group__3__Impl
	rule__BackendParameterDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterDeclarationAccess().getNoParameterAssignment_3()); }
	(rule__BackendParameterDeclaration__NoParameterAssignment_3)?
	{ after(grammarAccess.getBackendParameterDeclarationAccess().getNoParameterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BackendParameterDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackendParameterDeclarationAccess().getParametersAssignment_4()); }
	(rule__BackendParameterDeclaration__ParametersAssignment_4)*
	{ after(grammarAccess.getBackendParameterDeclarationAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturningDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturningDeclaration__Group__0__Impl
	rule__ReturningDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturningDeclarationAccess().getReturnsKeyword_0()); }
	'returns'
	{ after(grammarAccess.getReturningDeclarationAccess().getReturnsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturningDeclaration__Group__1__Impl
	rule__ReturningDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturningDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getReturningDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturningDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturningDeclarationAccess().getReturnTypeAssignment_2()); }
	(rule__ReturningDeclaration__ReturnTypeAssignment_2)
	{ after(grammarAccess.getReturningDeclarationAccess().getReturnTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UsingSystemKomponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsingSystemKomponent__Group__0__Impl
	rule__UsingSystemKomponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingSystemKomponentAccess().getUsingKeyword_0()); }
	'using'
	{ after(grammarAccess.getUsingSystemKomponentAccess().getUsingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsingSystemKomponent__Group__1__Impl
	rule__UsingSystemKomponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingSystemKomponentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getUsingSystemKomponentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsingSystemKomponent__Group__2__Impl
	rule__UsingSystemKomponent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingSystemKomponentAccess().getNothingAssignment_2()); }
	(rule__UsingSystemKomponent__NothingAssignment_2)?
	{ after(grammarAccess.getUsingSystemKomponentAccess().getNothingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsingSystemKomponent__Group__3__Impl
	rule__UsingSystemKomponent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingSystemKomponentAccess().getComponentsAssignment_3()); }
	(rule__UsingSystemKomponent__ComponentsAssignment_3)*
	{ after(grammarAccess.getUsingSystemKomponentAccess().getComponentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UsingSystemKomponent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingSystemKomponentAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getUsingSystemKomponentAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getServiceKeyword_0()); }
	'service'
	{ after(grammarAccess.getServiceAccess().getServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getNameAssignment_1()); }
	(rule__Service__NameAssignment_1)
	{ after(grammarAccess.getServiceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getDescriptionAssignment_3()); }
	(rule__Service__DescriptionAssignment_3)?
	{ after(grammarAccess.getServiceAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getMethodsAssignment_4()); }
	(rule__Service__MethodsAssignment_4)*
	{ after(grammarAccess.getServiceAccess().getMethodsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Service__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Util__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__0__Impl
	rule__Util__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getUtilKeyword_0()); }
	'util'
	{ after(grammarAccess.getUtilAccess().getUtilKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__1__Impl
	rule__Util__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getNameAssignment_1()); }
	(rule__Util__NameAssignment_1)
	{ after(grammarAccess.getUtilAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__2__Impl
	rule__Util__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getUtilAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__3__Impl
	rule__Util__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getDescriptionAssignment_3()); }
	(rule__Util__DescriptionAssignment_3)?
	{ after(grammarAccess.getUtilAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__4__Impl
	rule__Util__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getMethodsAssignment_4()); }
	(rule__Util__MethodsAssignment_4)*
	{ after(grammarAccess.getUtilAccess().getMethodsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Util__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUtilAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getUtilAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Helper__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__0__Impl
	rule__Helper__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getHelperKeyword_0()); }
	'helper'
	{ after(grammarAccess.getHelperAccess().getHelperKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__1__Impl
	rule__Helper__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getNameAssignment_1()); }
	(rule__Helper__NameAssignment_1)
	{ after(grammarAccess.getHelperAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__2__Impl
	rule__Helper__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getHelperAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__3__Impl
	rule__Helper__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getDescriptionAssignment_3()); }
	(rule__Helper__DescriptionAssignment_3)?
	{ after(grammarAccess.getHelperAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__4__Impl
	rule__Helper__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getMethodsAssignment_4()); }
	(rule__Helper__MethodsAssignment_4)*
	{ after(grammarAccess.getHelperAccess().getMethodsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getHelperAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_0()); }
	(rule__Method__NameAssignment_0)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getReturnsKeyword_1()); }
	'returns'
	{ after(grammarAccess.getMethodAccess().getReturnsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getReturnTypeAssignment_2()); }
	(rule__Method__ReturnTypeAssignment_2)
	{ after(grammarAccess.getMethodAccess().getReturnTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getDescriptionAssignment_4()); }
	(rule__Method__DescriptionAssignment_4)?
	{ after(grammarAccess.getMethodAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNoArgumentAssignment_5()); }
	(rule__Method__NoArgumentAssignment_5)?
	{ after(grammarAccess.getMethodAccess().getNoArgumentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getArgumentsAssignment_6()); }
	(rule__Method__ArgumentsAssignment_6)*
	{ after(grammarAccess.getMethodAccess().getArgumentsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgument__Group__0__Impl
	rule__MethodArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentAccess().getParamKeyword_0()); }
	'param'
	{ after(grammarAccess.getMethodArgumentAccess().getParamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgument__Group__1__Impl
	rule__MethodArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentAccess().getNameAssignment_1()); }
	(rule__MethodArgument__NameAssignment_1)
	{ after(grammarAccess.getMethodArgumentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentAccess().getTypeAssignment_2()); }
	(rule__MethodArgument__TypeAssignment_2)
	{ after(grammarAccess.getMethodArgumentAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeData__Group__0__Impl
	rule__TypeData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDataAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getTypeDataAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeData__Group__1__Impl
	rule__TypeData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDataAccess().getNameAssignment_1()); }
	(rule__TypeData__NameAssignment_1)
	{ after(grammarAccess.getTypeDataAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeData__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDataAccess().getClassNameAssignment_2()); }
	(rule__TypeData__ClassNameAssignment_2)?
	{ after(grammarAccess.getTypeDataAccess().getClassNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group__0__Impl
	rule__Implementation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getImplementationKeyword_0()); }
	'implementation'
	{ after(grammarAccess.getImplementationAccess().getImplementationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group__1__Impl
	rule__Implementation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group__2__Impl
	rule__Implementation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getImplementationAccess().getImplementationLinesAssignment_2()); }
		(rule__Implementation__ImplementationLinesAssignment_2)
		{ after(grammarAccess.getImplementationAccess().getImplementationLinesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getImplementationAccess().getImplementationLinesAssignment_2()); }
		(rule__Implementation__ImplementationLinesAssignment_2)*
		{ after(grammarAccess.getImplementationAccess().getImplementationLinesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplementationLine__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationLine__Group_8__0__Impl
	rule__ImplementationLine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationLine__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationLineAccess().getImplementationLineAction_8_0()); }
	()
	{ after(grammarAccess.getImplementationLineAccess().getImplementationLineAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationLine__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplementationLine__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplementationLine__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationLineAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_8_1()); }
	RULE_UNMODELISABLE_INFORMATION
	{ after(grammarAccess.getImplementationLineAccess().getUNMODELISABLE_INFORMATIONTerminalRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShowError__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowError__Group__0__Impl
	rule__ShowError__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowError__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowErrorAccess().getShowerrorKeyword_0()); }
	'showerror'
	{ after(grammarAccess.getShowErrorAccess().getShowerrorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowError__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowError__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowError__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowErrorAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getShowErrorAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShowWarning__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowWarning__Group__0__Impl
	rule__ShowWarning__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowWarning__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowWarningAccess().getShowwarningKeyword_0()); }
	'showwarning'
	{ after(grammarAccess.getShowWarningAccess().getShowwarningKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowWarning__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowWarning__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowWarning__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowWarningAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getShowWarningAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShowInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowInfo__Group__0__Impl
	rule__ShowInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowInfoAccess().getShowinfoKeyword_0()); }
	'showinfo'
	{ after(grammarAccess.getShowInfoAccess().getShowinfoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShowInfo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShowInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowInfoAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
	{ after(grammarAccess.getShowInfoAccess().getSTRINGTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableKeyword_0()); }
	'variable'
	{ after(grammarAccess.getVariableAccess().getVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeVariableAssignment_1()); }
	(rule__Variable__TypeVariableAssignment_1)
	{ after(grammarAccess.getVariableAccess().getTypeVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_2()); }
	(rule__Variable__NameAssignment_2)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getInitialInitialisationVariableAssignment_3()); }
	(rule__Variable__InitialInitialisationVariableAssignment_3)
	{ after(grammarAccess.getVariableAccess().getInitialInitialisationVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallLogic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallLogic__Group__0__Impl
	rule__CallLogic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallLogicAccess().getCallLogicKeyword_0()); }
	'callLogic'
	{ after(grammarAccess.getCallLogicAccess().getCallLogicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallLogic__Group__1__Impl
	rule__CallLogic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallLogicAccess().getLogicAssignment_1()); }
	(rule__CallLogic__LogicAssignment_1)
	{ after(grammarAccess.getCallLogicAccess().getLogicAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallLogic__Group__2__Impl
	rule__CallLogic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallLogicAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCallLogicAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallLogic__Group__3__Impl
	rule__CallLogic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallLogicAccess().getComponentBackendParameterAttributionsAssignment_3()); }
	(rule__CallLogic__ComponentBackendParameterAttributionsAssignment_3)*
	{ after(grammarAccess.getCallLogicAccess().getComponentBackendParameterAttributionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallLogic__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallLogicAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCallLogicAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallComponentMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__0__Impl
	rule__CallComponentMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getCallComponentMethodKeyword_0()); }
	'callComponentMethod'
	{ after(grammarAccess.getCallComponentMethodAccess().getCallComponentMethodKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__1__Impl
	rule__CallComponentMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentAssignment_1()); }
	(rule__CallComponentMethod__UsableSystemComponentAssignment_1)
	{ after(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__2__Impl
	rule__CallComponentMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getCallComponentMethodAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__3__Impl
	rule__CallComponentMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getMethodAssignment_3()); }
	(rule__CallComponentMethod__MethodAssignment_3)
	{ after(grammarAccess.getCallComponentMethodAccess().getMethodAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__4__Impl
	rule__CallComponentMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getCallComponentMethodAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__5__Impl
	rule__CallComponentMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getArgumentAttributionsAssignment_5()); }
	(rule__CallComponentMethod__ArgumentAttributionsAssignment_5)*
	{ after(grammarAccess.getCallComponentMethodAccess().getArgumentAttributionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallComponentMethod__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallComponentMethodAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getCallComponentMethodAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodArgumentValueAttribut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgumentValueAttribut__Group__0__Impl
	rule__MethodArgumentValueAttribut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentValueAttributAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getMethodArgumentValueAttributAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgumentValueAttribut__Group__1__Impl
	rule__MethodArgumentValueAttribut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentAssignment_1()); }
	(rule__MethodArgumentValueAttribut__ArgumentAssignment_1)
	{ after(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgumentValueAttribut__Group__2__Impl
	rule__MethodArgumentValueAttribut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentValueAttributAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMethodArgumentValueAttributAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodArgumentValueAttribut__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodArgumentValueAttributAccess().getValueAssignment_3()); }
	(rule__MethodArgumentValueAttribut__ValueAssignment_3)
	{ after(grammarAccess.getMethodArgumentValueAttributAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentBackendParameterValueAttribut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBackendParameterValueAttribut__Group__0__Impl
	rule__ComponentBackendParameterValueAttribut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBackendParameterValueAttribut__Group__1__Impl
	rule__ComponentBackendParameterValueAttribut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterAssignment_1()); }
	(rule__ComponentBackendParameterValueAttribut__ParameterAssignment_1)
	{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBackendParameterValueAttribut__Group__2__Impl
	rule__ComponentBackendParameterValueAttribut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentBackendParameterValueAttribut__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getValueAssignment_3()); }
	(rule__ComponentBackendParameterValueAttribut__ValueAssignment_3)
	{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialInitialisationVariable__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialInitialisationVariable__Group_1__0__Impl
	rule__InitialInitialisationVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialInitialisationVariable__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialInitialisationVariableAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getInitialInitialisationVariableAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialInitialisationVariable__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialInitialisationVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialInitialisationVariable__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialInitialisationVariableAccess().getValueAssignment_1_1()); }
	(rule__InitialInitialisationVariable__ValueAssignment_1_1)
	{ after(grammarAccess.getInitialInitialisationVariableAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValueAttribution__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValueAttribution__Group__0__Impl
	rule__VariableValueAttribution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAttributionAccess().getVariableAssignment_0()); }
	(rule__VariableValueAttribution__VariableAssignment_0)
	{ after(grammarAccess.getVariableValueAttributionAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValueAttribution__Group__1__Impl
	rule__VariableValueAttribution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAttributionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVariableValueAttributionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValueAttribution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValueAttributionAccess().getVariableNewValueAssignment_2()); }
	(rule__VariableValueAttribution__VariableNewValueAssignment_2)
	{ after(grammarAccess.getVariableValueAttributionAccess().getVariableNewValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getPredicatAssignment_1()); }
	(rule__Condition__PredicatAssignment_1)
	{ after(grammarAccess.getConditionAccess().getPredicatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getComplementPredicatAssignment_2()); }
	(rule__Condition__ComplementPredicatAssignment_2)?
	{ after(grammarAccess.getConditionAccess().getComplementPredicatAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
	rule__Condition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionImplementationAssignment_4()); }
	(rule__Condition__ConditionImplementationAssignment_4)
	{ after(grammarAccess.getConditionAccess().getConditionImplementationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__5__Impl
	rule__Condition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__6__Impl
	rule__Condition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getElseConditionAssignment_6()); }
	(rule__Condition__ElseConditionAssignment_6)?
	{ after(grammarAccess.getConditionAccess().getElseConditionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getConditionAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicat__Group__0__Impl
	rule__Predicat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatAccess().getVariableAssignment_0()); }
	(rule__Predicat__VariableAssignment_0)
	{ after(grammarAccess.getPredicatAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicat__Group__1__Impl
	rule__Predicat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getPredicatAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicat__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatAccess().getComparisonValueAssignment_2()); }
	(rule__Predicat__ComparisonValueAssignment_2)
	{ after(grammarAccess.getPredicatAccess().getComparisonValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplementPredicat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplementPredicat__Group__0__Impl
	rule__ComplementPredicat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementPredicat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplementPredicatAccess().getLogicalLinkAssignment_0()); }
	(rule__ComplementPredicat__LogicalLinkAssignment_0)
	{ after(grammarAccess.getComplementPredicatAccess().getLogicalLinkAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementPredicat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplementPredicat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementPredicat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplementPredicatAccess().getPredicatAssignment_1()); }
	(rule__ComplementPredicat__PredicatAssignment_1)
	{ after(grammarAccess.getComplementPredicatAccess().getPredicatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__0__Impl
	rule__ElseCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseConditionAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__1__Impl
	rule__ElseCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__2__Impl
	rule__ElseCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getConditionImplementationAssignment_2()); }
	(rule__ElseCondition__ConditionImplementationAssignment_2)
	{ after(grammarAccess.getElseConditionAccess().getConditionImplementationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__DatatypesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getDatatypesTypeDataParserRuleCall_0_0()); }
		ruleTypeData
		{ after(grammarAccess.getRootAccess().getDatatypesTypeDataParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__ServicesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getServicesServiceParserRuleCall_1_0()); }
		ruleService
		{ after(grammarAccess.getRootAccess().getServicesServiceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__UtilsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getUtilsUtilParserRuleCall_2_0()); }
		ruleUtil
		{ after(grammarAccess.getRootAccess().getUtilsUtilParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__HelpersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getHelpersHelperParserRuleCall_3_0()); }
		ruleHelper
		{ after(grammarAccess.getRootAccess().getHelpersHelperParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__LogicsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getLogicsLogicParserRuleCall_4_0()); }
		ruleLogic
		{ after(grammarAccess.getRootAccess().getLogicsLogicParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__BackendcommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getBackendcommandsBackendcommandParserRuleCall_5_0()); }
		ruleBackendcommand
		{ after(grammarAccess.getRootAccess().getBackendcommandsBackendcommandParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__CommandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getCommandsCommandParserRuleCall_6_0()); }
		ruleCommand
		{ after(grammarAccess.getRootAccess().getCommandsCommandParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__ShortcutsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getShortcutsShortcutParserRuleCall_7_0()); }
		ruleShortcut
		{ after(grammarAccess.getRootAccess().getShortcutsShortcutParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortcutAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getShortcutAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__CommandAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortcutAccess().getCommandCommandCrossReference_3_0()); }
		(
			{ before(grammarAccess.getShortcutAccess().getCommandCommandIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShortcutAccess().getCommandCommandIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getShortcutAccess().getCommandCommandCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortcut__ParamReferencesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortcutAccess().getParamReferencesCommandParameterReferenceParserRuleCall_5_0()); }
		ruleCommandParameterReference
		{ after(grammarAccess.getShortcutAccess().getParamReferencesCommandParameterReferenceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__ParamAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterReferenceAccess().getParamCommandParameterCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCommandParameterReferenceAccess().getParamCommandParameterIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCommandParameterReferenceAccess().getParamCommandParameterIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCommandParameterReferenceAccess().getParamCommandParameterCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameterReference__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterReferenceAccess().getValueBasicTypeParserRuleCall_3_0()); }
		ruleBasicType
		{ after(grammarAccess.getCommandParameterReferenceAccess().getValueBasicTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__BackendCommandAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getBackendCommandBackendcommandCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCommandAccess().getBackendCommandBackendcommandIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCommandAccess().getBackendCommandBackendcommandIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCommandAccess().getBackendCommandBackendcommandCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__DescriptionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getDescriptionDescriptionParserRuleCall_6_0()); }
		ruleDescription
		{ after(grammarAccess.getCommandAccess().getDescriptionDescriptionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NoParameterAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getNoParameterNoParameterParserRuleCall_7_0()); }
		ruleNoParameter
		{ after(grammarAccess.getCommandAccess().getNoParameterNoParameterParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ParametersAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getParametersCommandParameterParserRuleCall_8_0()); }
		ruleCommandParameter
		{ after(grammarAccess.getCommandAccess().getParametersCommandParameterParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBackendcommandAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getBackendcommandAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__UsingSystemKomponentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0()); }
		ruleUsingSystemKomponent
		{ after(grammarAccess.getBackendcommandAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__ParameterDeclarationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0()); }
		ruleBackendParameterDeclaration
		{ after(grammarAccess.getBackendcommandAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__ReturningDeclarationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0()); }
		ruleReturningDeclaration
		{ after(grammarAccess.getBackendcommandAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backendcommand__ImplementationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendcommandAccess().getImplementationImplementationParserRuleCall_7_0()); }
		ruleImplementation
		{ after(grammarAccess.getBackendcommandAccess().getImplementationImplementationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLogicAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getLogicAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__UsingSystemKomponentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0()); }
		ruleUsingSystemKomponent
		{ after(grammarAccess.getLogicAccess().getUsingSystemKomponentUsingSystemKomponentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__ParameterDeclarationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0()); }
		ruleBackendParameterDeclaration
		{ after(grammarAccess.getLogicAccess().getParameterDeclarationBackendParameterDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__ReturningDeclarationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0()); }
		ruleReturningDeclaration
		{ after(grammarAccess.getLogicAccess().getReturningDeclarationReturningDeclarationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__ImplementationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getImplementationImplementationParserRuleCall_7_0()); }
		ruleImplementation
		{ after(grammarAccess.getLogicAccess().getImplementationImplementationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterAccess().getTypeTypeDataCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCommandParameterAccess().getTypeTypeDataIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCommandParameterAccess().getTypeTypeDataIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCommandParameterAccess().getTypeTypeDataCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__ParameterCategoryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_2_0()); }
		rulePARAMETER_CATEGORY
		{ after(grammarAccess.getCommandParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandParameter__BackendParameterReferenceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandParameterAccess().getBackendParameterReferenceBackendParameterReferenceParserRuleCall_3_0()); }
		ruleBackendParameterReference
		{ after(grammarAccess.getCommandParameterAccess().getBackendParameterReferenceBackendParameterReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBackendParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterAccess().getTypeTypeDataCrossReference_2_0()); }
		(
			{ before(grammarAccess.getBackendParameterAccess().getTypeTypeDataIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBackendParameterAccess().getTypeTypeDataIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getBackendParameterAccess().getTypeTypeDataCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameter__ParameterCategoryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_3_0()); }
		rulePARAMETER_CATEGORY
		{ after(grammarAccess.getBackendParameterAccess().getParameterCategoryPARAMETER_CATEGORYEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterReference__BackendCommandParameterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterBackendParameterCrossReference_2_0()); }
		(
			{ before(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterBackendParameterIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterBackendParameterIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getBackendParameterReferenceAccess().getBackendCommandParameterBackendParameterCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__NoParameterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterDeclarationAccess().getNoParameterNoParameterParserRuleCall_3_0()); }
		ruleNoParameter
		{ after(grammarAccess.getBackendParameterDeclarationAccess().getNoParameterNoParameterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackendParameterDeclaration__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackendParameterDeclarationAccess().getParametersBackendParameterParserRuleCall_4_0()); }
		ruleBackendParameter
		{ after(grammarAccess.getBackendParameterDeclarationAccess().getParametersBackendParameterParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturningDeclaration__ReturnTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturningDeclarationAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0()); }
		ruleTypeDataReference
		{ after(grammarAccess.getReturningDeclarationAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__NothingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsingSystemKomponentAccess().getNothingUsingNothingParserRuleCall_2_0()); }
		ruleUsingNothing
		{ after(grammarAccess.getUsingSystemKomponentAccess().getNothingUsingNothingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UsingSystemKomponent__ComponentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsingSystemKomponentAccess().getComponentsUsableSystemComponentCrossReference_3_0()); }
		(
			{ before(grammarAccess.getUsingSystemKomponentAccess().getComponentsUsableSystemComponentIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUsingSystemKomponentAccess().getComponentsUsableSystemComponentIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getUsingSystemKomponentAccess().getComponentsUsableSystemComponentCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getServiceAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__MethodsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceAccess().getMethodsMethodParserRuleCall_4_0()); }
		ruleMethod
		{ after(grammarAccess.getServiceAccess().getMethodsMethodParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUtilAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUtilAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUtilAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getUtilAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Util__MethodsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUtilAccess().getMethodsMethodParserRuleCall_4_0()); }
		ruleMethod
		{ after(grammarAccess.getUtilAccess().getMethodsMethodParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getHelperAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getHelperAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__MethodsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getMethodsMethodParserRuleCall_4_0()); }
		ruleMethod
		{ after(grammarAccess.getHelperAccess().getMethodsMethodParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReturnTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0()); }
		ruleTypeDataReference
		{ after(grammarAccess.getMethodAccess().getReturnTypeTypeDataReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
		ruleDescription
		{ after(grammarAccess.getMethodAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NoArgumentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNoArgumentNoArgumentParserRuleCall_5_0()); }
		ruleNoArgument
		{ after(grammarAccess.getMethodAccess().getNoArgumentNoArgumentParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ArgumentsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getArgumentsMethodArgumentParserRuleCall_6_0()); }
		ruleMethodArgument
		{ after(grammarAccess.getMethodAccess().getArgumentsMethodArgumentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgument__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentAccess().getTypeTypeDataCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMethodArgumentAccess().getTypeTypeDataIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodArgumentAccess().getTypeTypeDataIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMethodArgumentAccess().getTypeTypeDataCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDataReference__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getTypeTypeDataCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTypeDataReferenceAccess().getTypeTypeDataIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeDataReferenceAccess().getTypeTypeDataIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTypeDataReferenceAccess().getTypeTypeDataCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDataReference__VoidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getVoidVoidKeyword_1_0()); }
		(
			{ before(grammarAccess.getTypeDataReferenceAccess().getVoidVoidKeyword_1_0()); }
			'void'
			{ after(grammarAccess.getTypeDataReferenceAccess().getVoidVoidKeyword_1_0()); }
		)
		{ after(grammarAccess.getTypeDataReferenceAccess().getVoidVoidKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDataReference__ValueInClipboardAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardValueInClipboardKeyword_2_0()); }
		(
			{ before(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardValueInClipboardKeyword_2_0()); }
			'ValueInClipboard'
			{ after(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardValueInClipboardKeyword_2_0()); }
		)
		{ after(grammarAccess.getTypeDataReferenceAccess().getValueInClipboardValueInClipboardKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDataReference__UnmodelisableInformationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataReferenceAccess().getUnmodelisableInformationUNMODELISABLE_INFORMATIONTerminalRuleCall_3_0()); }
		RULE_UNMODELISABLE_INFORMATION
		{ after(grammarAccess.getTypeDataReferenceAccess().getUnmodelisableInformationUNMODELISABLE_INFORMATIONTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDataAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeData__ClassNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDataAccess().getClassNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeDataAccess().getClassNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__ImplementationLinesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_2_0()); }
		ruleImplementationLine
		{ after(grammarAccess.getImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeVariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeVariableTypeDataCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getTypeVariableTypeDataIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableAccess().getTypeVariableTypeDataIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableAccess().getTypeVariableTypeDataCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialInitialisationVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getInitialInitialisationVariableInitialInitialisationVariableParserRuleCall_3_0()); }
		ruleInitialInitialisationVariable
		{ after(grammarAccess.getVariableAccess().getInitialInitialisationVariableInitialInitialisationVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__LogicAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallLogicAccess().getLogicLogicCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCallLogicAccess().getLogicLogicIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCallLogicAccess().getLogicLogicIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCallLogicAccess().getLogicLogicCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallLogic__ComponentBackendParameterAttributionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallLogicAccess().getComponentBackendParameterAttributionsComponentBackendParameterValueAttributParserRuleCall_3_0()); }
		ruleComponentBackendParameterValueAttribut
		{ after(grammarAccess.getCallLogicAccess().getComponentBackendParameterAttributionsComponentBackendParameterValueAttributParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__UsableSystemComponentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentUsableSystemComponentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentUsableSystemComponentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentUsableSystemComponentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCallComponentMethodAccess().getUsableSystemComponentUsableSystemComponentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__MethodAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallComponentMethodAccess().getMethodMethodCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCallComponentMethodAccess().getMethodMethodQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getCallComponentMethodAccess().getMethodMethodQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCallComponentMethodAccess().getMethodMethodCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallComponentMethod__ArgumentAttributionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallComponentMethodAccess().getArgumentAttributionsMethodArgumentValueAttributParserRuleCall_5_0()); }
		ruleMethodArgumentValueAttribut
		{ after(grammarAccess.getCallComponentMethodAccess().getArgumentAttributionsMethodArgumentValueAttributParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__ArgumentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentMethodArgumentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentMethodArgumentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentMethodArgumentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMethodArgumentValueAttributAccess().getArgumentMethodArgumentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentValueAttribut__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentValueAttributAccess().getValueMethodArgumentAttribuableValueParserRuleCall_3_0()); }
		ruleMethodArgumentAttribuableValue
		{ after(grammarAccess.getMethodArgumentValueAttributAccess().getValueMethodArgumentAttribuableValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__ParameterAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterBackendParameterCrossReference_1_0()); }
		(
			{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterBackendParameterIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterBackendParameterIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getParameterBackendParameterCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterValueAttribut__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBackendParameterValueAttributAccess().getValueComponentBackendParameterAttribuableValueParserRuleCall_3_0()); }
		ruleComponentBackendParameterAttribuableValue
		{ after(grammarAccess.getComponentBackendParameterValueAttributAccess().getValueComponentBackendParameterAttribuableValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentBackendParameterAttribuableValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueComponentBackendParameterAttribuableExpressionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueComponentBackendParameterAttribuableExpressionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueComponentBackendParameterAttribuableExpressionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getComponentBackendParameterAttribuableValueAccess().getValueComponentBackendParameterAttribuableExpressionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodArgumentAttribuableValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueMethodArgumentAttribuableExpressionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueMethodArgumentAttribuableExpressionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueMethodArgumentAttribuableExpressionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMethodArgumentAttribuableValueAccess().getValueMethodArgumentAttribuableExpressionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialInitialisationVariable__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialInitialisationVariableAccess().getValueVariableNewValueParserRuleCall_1_1_0()); }
		ruleVariableNewValue
		{ after(grammarAccess.getInitialInitialisationVariableAccess().getValueVariableNewValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAttributionAccess().getVariableVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVariableValueAttributionAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableValueAttributionAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVariableValueAttributionAccess().getVariableVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValueAttribution__VariableNewValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAttributionAccess().getVariableNewValueValueExpressionParserRuleCall_2_0()); }
		ruleValueExpression
		{ after(grammarAccess.getVariableValueAttributionAccess().getVariableNewValueValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableNewValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableNewValueAccess().getValueValueExpressionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getVariableNewValueAccess().getValueValueExpressionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableNewValueAccess().getValueValueExpressionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getVariableNewValueAccess().getValueValueExpressionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueExpression__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueExpressionAccess().getValueAttribuableValueParserRuleCall_2_0()); }
		ruleAttribuableValue
		{ after(grammarAccess.getValueExpressionAccess().getValueAttribuableValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__PredicatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getPredicatPredicatParserRuleCall_1_0()); }
		rulePredicat
		{ after(grammarAccess.getConditionAccess().getPredicatPredicatParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ComplementPredicatAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getComplementPredicatComplementPredicatParserRuleCall_2_0()); }
		ruleComplementPredicat
		{ after(grammarAccess.getConditionAccess().getComplementPredicatComplementPredicatParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ConditionImplementationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_4_0()); }
		ruleConditionImplementation
		{ after(grammarAccess.getConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ElseConditionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getElseConditionElseConditionParserRuleCall_6_0()); }
		ruleElseCondition
		{ after(grammarAccess.getConditionAccess().getElseConditionElseConditionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionImplementation__ImplementationLinesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_0()); }
		ruleImplementationLine
		{ after(grammarAccess.getConditionImplementationAccess().getImplementationLinesImplementationLineParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatAccess().getVariableVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPredicatAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPredicatAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPredicatAccess().getVariableVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicat__ComparisonValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatAccess().getComparisonValuePredicatValueExpressionParserRuleCall_2_0()); }
		rulePredicatValueExpression
		{ after(grammarAccess.getPredicatAccess().getComparisonValuePredicatValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatValueExpression__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatValueExpressionAccess().getValuePredicatAttribuableValueCrossReference_2_0()); }
		(
			{ before(grammarAccess.getPredicatValueExpressionAccess().getValuePredicatAttribuableValueIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPredicatValueExpressionAccess().getValuePredicatAttribuableValueIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getPredicatValueExpressionAccess().getValuePredicatAttribuableValueCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementPredicat__LogicalLinkAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplementPredicatAccess().getLogicalLinkLOGICAL_LINKParserRuleCall_0_0()); }
		ruleLOGICAL_LINK
		{ after(grammarAccess.getComplementPredicatAccess().getLogicalLinkLOGICAL_LINKParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplementPredicat__PredicatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplementPredicatAccess().getPredicatPredicatParserRuleCall_1_0()); }
		rulePredicat
		{ after(grammarAccess.getComplementPredicatAccess().getPredicatPredicatParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__ConditionImplementationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_2_0()); }
		ruleConditionImplementation
		{ after(grammarAccess.getElseConditionAccess().getConditionImplementationConditionImplementationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_LINK__ORAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOGICAL_LINKAccess().getOROrKeyword_0_0()); }
		(
			{ before(grammarAccess.getLOGICAL_LINKAccess().getOROrKeyword_0_0()); }
			'or'
			{ after(grammarAccess.getLOGICAL_LINKAccess().getOROrKeyword_0_0()); }
		)
		{ after(grammarAccess.getLOGICAL_LINKAccess().getOROrKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_LINK__ANDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLOGICAL_LINKAccess().getANDAndKeyword_1_0()); }
		(
			{ before(grammarAccess.getLOGICAL_LINKAccess().getANDAndKeyword_1_0()); }
			'and'
			{ after(grammarAccess.getLOGICAL_LINKAccess().getANDAndKeyword_1_0()); }
		)
		{ after(grammarAccess.getLOGICAL_LINKAccess().getANDAndKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_UNMODELISABLE_INFORMATION : '@' .+ '@';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
